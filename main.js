(()=>{"use strict";var e={426:(e,t,n)=>{n.d(t,{Z:()=>c});var r=n(15),o=n.n(r),i=n(645),a=n.n(i)()(o());a.push([e.id,".modal {\n  display: none; /* Hidden by default */\n  position: fixed; /* Stay in place */\n  z-index: 99; /* Sit on top */\n  left: 0;\n  top: 0;\n  width: 100%; /* Full width */\n  height: 100%; /* Full height */\n  \n  background-color: rgb(0, 0, 0); /* Fallback color */\n  background-color: rgba(0, 0, 0, 0.4); /* Black w/ opacity */\n\n  overflow: hidden; \n}\n\n.modal-content {\n  background-color: #fefefe;\n  margin: 15% auto; /* 15% from the top and centered */\n  padding: 20px;\n  border: 1px solid #888;\n  width: 80%; /* Could be more or less, depending on screen size */\n}\n","",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"AAAA;EACE,aAAa,EAAE,sBAAsB;EACrC,eAAe,EAAE,kBAAkB;EACnC,WAAW,EAAE,eAAe;EAC5B,OAAO;EACP,MAAM;EACN,WAAW,EAAE,eAAe;EAC5B,YAAY,EAAE,gBAAgB;;EAE9B,8BAA8B,EAAE,mBAAmB;EACnD,oCAAoC,EAAE,qBAAqB;;EAE3D,gBAAgB;AAClB;;AAEA;EACE,yBAAyB;EACzB,gBAAgB,EAAE,kCAAkC;EACpD,aAAa;EACb,sBAAsB;EACtB,UAAU,EAAE,oDAAoD;AAClE",sourcesContent:[".modal {\n  display: none; /* Hidden by default */\n  position: fixed; /* Stay in place */\n  z-index: 99; /* Sit on top */\n  left: 0;\n  top: 0;\n  width: 100%; /* Full width */\n  height: 100%; /* Full height */\n  \n  background-color: rgb(0, 0, 0); /* Fallback color */\n  background-color: rgba(0, 0, 0, 0.4); /* Black w/ opacity */\n\n  overflow: hidden; \n}\n\n.modal-content {\n  background-color: #fefefe;\n  margin: 15% auto; /* 15% from the top and centered */\n  padding: 20px;\n  border: 1px solid #888;\n  width: 80%; /* Could be more or less, depending on screen size */\n}\n"],sourceRoot:""}]);const c=a},645:e=>{e.exports=function(e){var t=[];return t.toString=function(){return this.map((function(t){var n=e(t);return t[2]?"@media ".concat(t[2]," {").concat(n,"}"):n})).join("")},t.i=function(e,n,r){"string"==typeof e&&(e=[[null,e,""]]);var o={};if(r)for(var i=0;i<this.length;i++){var a=this[i][0];null!=a&&(o[a]=!0)}for(var c=0;c<e.length;c++){var l=[].concat(e[c]);r&&o[l[0]]||(n&&(l[2]?l[2]="".concat(n," and ").concat(l[2]):l[2]=n),t.push(l))}},t}},15:e=>{function t(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=new Array(t);n<t;n++)r[n]=e[n];return r}e.exports=function(e){var n,r,o=(r=4,function(e){if(Array.isArray(e))return e}(n=e)||function(e,t){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(e)){var n=[],r=!0,o=!1,i=void 0;try{for(var a,c=e[Symbol.iterator]();!(r=(a=c.next()).done)&&(n.push(a.value),!t||n.length!==t);r=!0);}catch(e){o=!0,i=e}finally{try{r||null==c.return||c.return()}finally{if(o)throw i}}return n}}(n,r)||function(e,n){if(e){if("string"==typeof e)return t(e,n);var r=Object.prototype.toString.call(e).slice(8,-1);return"Object"===r&&e.constructor&&(r=e.constructor.name),"Map"===r||"Set"===r?Array.from(e):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?t(e,n):void 0}}(n,r)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()),i=o[1],a=o[3];if("function"==typeof btoa){var c=btoa(unescape(encodeURIComponent(JSON.stringify(a)))),l="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(c),d="/*# ".concat(l," */"),s=a.sources.map((function(e){return"/*# sourceURL=".concat(a.sourceRoot||"").concat(e," */")}));return[i].concat(s).concat([d]).join("\n")}return[i].join("\n")}},379:(e,t,n)=>{var r,o=function(){var e={};return function(t){if(void 0===e[t]){var n=document.querySelector(t);if(window.HTMLIFrameElement&&n instanceof window.HTMLIFrameElement)try{n=n.contentDocument.head}catch(e){n=null}e[t]=n}return e[t]}}(),i=[];function a(e){for(var t=-1,n=0;n<i.length;n++)if(i[n].identifier===e){t=n;break}return t}function c(e,t){for(var n={},r=[],o=0;o<e.length;o++){var c=e[o],l=t.base?c[0]+t.base:c[0],d=n[l]||0,s="".concat(l," ").concat(d);n[l]=d+1;var u=a(s),f={css:c[1],media:c[2],sourceMap:c[3]};-1!==u?(i[u].references++,i[u].updater(f)):i.push({identifier:s,updater:y(f,t),references:1}),r.push(s)}return r}function l(e){var t=document.createElement("style"),r=e.attributes||{};if(void 0===r.nonce){var i=n.nc;i&&(r.nonce=i)}if(Object.keys(r).forEach((function(e){t.setAttribute(e,r[e])})),"function"==typeof e.insert)e.insert(t);else{var a=o(e.insert||"head");if(!a)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");a.appendChild(t)}return t}var d,s=(d=[],function(e,t){return d[e]=t,d.filter(Boolean).join("\n")});function u(e,t,n,r){var o=n?"":r.media?"@media ".concat(r.media," {").concat(r.css,"}"):r.css;if(e.styleSheet)e.styleSheet.cssText=s(t,o);else{var i=document.createTextNode(o),a=e.childNodes;a[t]&&e.removeChild(a[t]),a.length?e.insertBefore(i,a[t]):e.appendChild(i)}}function f(e,t,n){var r=n.css,o=n.media,i=n.sourceMap;if(o?e.setAttribute("media",o):e.removeAttribute("media"),i&&"undefined"!=typeof btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(i))))," */")),e.styleSheet)e.styleSheet.cssText=r;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(r))}}var p=null,m=0;function y(e,t){var n,r,o;if(t.singleton){var i=m++;n=p||(p=l(t)),r=u.bind(null,n,i,!1),o=u.bind(null,n,i,!0)}else n=l(t),r=f.bind(null,n,t),o=function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(n)};return r(e),function(t){if(t){if(t.css===e.css&&t.media===e.media&&t.sourceMap===e.sourceMap)return;r(e=t)}else o()}}e.exports=function(e,t){(t=t||{}).singleton||"boolean"==typeof t.singleton||(t.singleton=(void 0===r&&(r=Boolean(window&&document&&document.all&&!window.atob)),r));var n=c(e=e||[],t);return function(e){if(e=e||[],"[object Array]"===Object.prototype.toString.call(e)){for(var r=0;r<n.length;r++){var o=a(n[r]);i[o].references--}for(var l=c(e,t),d=0;d<n.length;d++){var s=a(n[d]);0===i[s].references&&(i[s].updater(),i.splice(s,1))}n=l}}}}},t={};function n(r){if(t[r])return t[r].exports;var o=t[r]={id:r,exports:{}};return e[r](o,o.exports,n),o.exports}n.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return n.d(t,{a:t}),t},n.d=(e,t)=>{for(var r in t)n.o(t,r)&&!n.o(e,r)&&Object.defineProperty(e,r,{enumerable:!0,get:t[r]})},n.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),(()=>{var e="todo.lists",t="todo.selectedId",r=JSON.parse(localStorage.getItem(e))||[],o={selectedId:localStorage.getItem(t)};function i(){localStorage.setItem(e,JSON.stringify(r)),localStorage.setItem(t,o.selectedId)}function a(e){for(;e.firstChild;)e.removeChild(e.firstChild)}var c=function e(t,n,r,o){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.title=t,this.description=n,this.ddate=r,this.priority=o,this.id=Date.now().toString()},l=document.querySelector("#title"),d=document.querySelector("#description"),s=document.querySelector("#date"),u=document.querySelector("#priority"),f=document.querySelector("#todoindex"),p=document.querySelector(".submit"),m=document.querySelector("#myModal"),y=document.querySelector("[data-new-task-form]"),v=!1;const A=function(e){return{id:Date.now().toString(),name:e,tasks:[]}};var h=n(379),g=n.n(h),b=n(426);g()(b.Z,{insert:"head",singleton:!1}),b.Z.locals;var S=document.querySelector("[data-lists]"),E=document.querySelector("[data-project-form]"),C=document.querySelector("[data-project-input]"),w=document.querySelector("[data-new-task-form]"),q=document.querySelector("[data-todo-template]"),k=document.querySelector(".cards"),x=document.querySelector("#myModal"),B=document.querySelector("#myBtn"),L=document.querySelector(".close"),I=document.querySelector("#title"),j=document.querySelector("#description"),T=document.querySelector("#date"),O=document.querySelector("#priority"),M=document.querySelector("#todoindex"),D=document.querySelector(".modal-title"),N=document.querySelector(".submit");function U(e){e.tasks.forEach((function(t){var n=document.importNode(q.content,!0),a=n.querySelector(".card");n.querySelector(".card-title").innerText=t.title,n.querySelector(".card-description").innerText=t.description;var c=n.querySelector(".card-priority");c.innerText=t.priority,c.classList.add("btn"),n.querySelector(".card-footer").innerText="Due on ".concat(t.ddate);var A=n.querySelector(".edit-btn"),h=e.tasks.indexOf(t);A.addEventListener("click",(function(){return function(e,t){!function(){var e=document.querySelector(".modal-title");v?(m.style.pointerEvents="none",m.style.transform="scale(0)",v=!1,y.reset()):(e.textContent="Update Todo",y.value="Update",m.style.pointerEvents="auto",m.style.transform="scale(1)",m.style.display="block",v=!0,y.reset())}(),l.value=e.title,d.value=e.description,u.value=e.priority,s.value=e.ddate,f.value=t,p.classList.add("edit")}(t,h)})),n.querySelector(".delete-btn").addEventListener("click",(function(){!function(e,t){var n=e.value;r.find((function(e){return e.id===o.selectedId})).tasks.splice(n,1),N.classList.contains("edit")&&N.classList.remove("edit"),i(),k.removeChild(t)}(M,a)})),k.appendChild(n),document.querySelectorAll(".card-priority").forEach((function(e){return"high"===e.textContent?e.classList.add("btn-success"):"medium"===e.textContent?e.classList.add("btn-warning"):e.classList.add("btn-danger")}))}))}function F(){a(S),r.forEach((function(e){var t=document.createElement("li");t.dataset.listId=e.id,t.classList.add("list-group-item"),t.setAttribute("role","button"),t.innerText=e.name,e.id===o.selectedId&&t.classList.add("active"),S.appendChild(t)}));var e=r.find((function(e){return e.id===o.selectedId}));null==e?k.style.display="none":(k.style.style="",a(k),U(e))}function R(){F(),i()}F(),function(){if(0===r.length){var e=A("Default");o.selectedId=e.id,r.push(e),R()}}(),E.addEventListener("submit",(function(e){e.preventDefault();var t=C.value;if(null!=t&&""!==t){var n=A(t);C.value=null,r.push(n),R()}})),S.addEventListener("click",(function(e){e.preventDefault(),"li"===e.target.tagName.toLowerCase()&&(o.selectedId=e.target.dataset.listId,R())})),N.addEventListener("click",(function(e){if(e.preventDefault(),N.classList.contains("edit")){var t=M.value,n=r.find((function(e){return e.id===o.selectedId})),i=n.tasks[t];i.title=I.value,i.description=j.value,i.priority=O.value,i.ddate=T.value,n.tasks[t]=i,N.classList.remove("edit")}else{var a=I.value,l=j.value,d=T.value,s=O.value,u=new c(a,l,d,s);r.find((function(e){return e.id===o.selectedId})).tasks.push(u)}R(),x.style.display="none",w.reset()})),B.addEventListener("click",(function(){x.style.display="block",D.textContent="New Todo",w.reset()})),L.addEventListener("click",(function(){x.style.display="none",w.reset()})),window.onclick=function(e){e.target===x&&(x.style.display="none",w.reset())}})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,