(()=>{"use strict";var e={426:(e,t,n)=>{n.d(t,{Z:()=>c});var r=n(15),o=n.n(r),a=n(645),i=n.n(a)()(o());i.push([e.id,".modal {\n  display: none;\n  position: fixed;\n  z-index: 99;\n  left: 0;\n  top: 0;\n  width: 100%; /* Full width */\n  height: 100%; /* Full height */\n  background-color: rgb(0, 0, 0); /* Fallback color */\n  background-color: rgba(0, 0, 0, 0.4); /* Black w/ opacity */\n  overflow: hidden;\n}\n\n.modal-content {\n  background-color: #fefefe;\n  margin: 15% auto;\n  padding: 20px;\n  border: 1px solid #888;\n  width: 80%;\n}\n","",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"AAAA;EACE,aAAa;EACb,eAAe;EACf,WAAW;EACX,OAAO;EACP,MAAM;EACN,WAAW,EAAE,eAAe;EAC5B,YAAY,EAAE,gBAAgB;EAC9B,8BAA8B,EAAE,mBAAmB;EACnD,oCAAoC,EAAE,qBAAqB;EAC3D,gBAAgB;AAClB;;AAEA;EACE,yBAAyB;EACzB,gBAAgB;EAChB,aAAa;EACb,sBAAsB;EACtB,UAAU;AACZ",sourcesContent:[".modal {\n  display: none;\n  position: fixed;\n  z-index: 99;\n  left: 0;\n  top: 0;\n  width: 100%; /* Full width */\n  height: 100%; /* Full height */\n  background-color: rgb(0, 0, 0); /* Fallback color */\n  background-color: rgba(0, 0, 0, 0.4); /* Black w/ opacity */\n  overflow: hidden;\n}\n\n.modal-content {\n  background-color: #fefefe;\n  margin: 15% auto;\n  padding: 20px;\n  border: 1px solid #888;\n  width: 80%;\n}\n"],sourceRoot:""}]);const c=i},645:e=>{e.exports=function(e){var t=[];return t.toString=function(){return this.map((function(t){var n=e(t);return t[2]?"@media ".concat(t[2]," {").concat(n,"}"):n})).join("")},t.i=function(e,n,r){"string"==typeof e&&(e=[[null,e,""]]);var o={};if(r)for(var a=0;a<this.length;a++){var i=this[a][0];null!=i&&(o[i]=!0)}for(var c=0;c<e.length;c++){var l=[].concat(e[c]);r&&o[l[0]]||(n&&(l[2]?l[2]="".concat(n," and ").concat(l[2]):l[2]=n),t.push(l))}},t}},15:e=>{function t(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=new Array(t);n<t;n++)r[n]=e[n];return r}e.exports=function(e){var n,r,o=(r=4,function(e){if(Array.isArray(e))return e}(n=e)||function(e,t){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(e)){var n=[],r=!0,o=!1,a=void 0;try{for(var i,c=e[Symbol.iterator]();!(r=(i=c.next()).done)&&(n.push(i.value),!t||n.length!==t);r=!0);}catch(e){o=!0,a=e}finally{try{r||null==c.return||c.return()}finally{if(o)throw a}}return n}}(n,r)||function(e,n){if(e){if("string"==typeof e)return t(e,n);var r=Object.prototype.toString.call(e).slice(8,-1);return"Object"===r&&e.constructor&&(r=e.constructor.name),"Map"===r||"Set"===r?Array.from(e):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?t(e,n):void 0}}(n,r)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()),a=o[1],i=o[3];if("function"==typeof btoa){var c=btoa(unescape(encodeURIComponent(JSON.stringify(i)))),l="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(c),s="/*# ".concat(l," */"),d=i.sources.map((function(e){return"/*# sourceURL=".concat(i.sourceRoot||"").concat(e," */")}));return[a].concat(d).concat([s]).join("\n")}return[a].join("\n")}},379:(e,t,n)=>{var r,o=function(){var e={};return function(t){if(void 0===e[t]){var n=document.querySelector(t);if(window.HTMLIFrameElement&&n instanceof window.HTMLIFrameElement)try{n=n.contentDocument.head}catch(e){n=null}e[t]=n}return e[t]}}(),a=[];function i(e){for(var t=-1,n=0;n<a.length;n++)if(a[n].identifier===e){t=n;break}return t}function c(e,t){for(var n={},r=[],o=0;o<e.length;o++){var c=e[o],l=t.base?c[0]+t.base:c[0],s=n[l]||0,d="".concat(l," ").concat(s);n[l]=s+1;var u=i(d),f={css:c[1],media:c[2],sourceMap:c[3]};-1!==u?(a[u].references++,a[u].updater(f)):a.push({identifier:d,updater:m(f,t),references:1}),r.push(d)}return r}function l(e){var t=document.createElement("style"),r=e.attributes||{};if(void 0===r.nonce){var a=n.nc;a&&(r.nonce=a)}if(Object.keys(r).forEach((function(e){t.setAttribute(e,r[e])})),"function"==typeof e.insert)e.insert(t);else{var i=o(e.insert||"head");if(!i)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");i.appendChild(t)}return t}var s,d=(s=[],function(e,t){return s[e]=t,s.filter(Boolean).join("\n")});function u(e,t,n,r){var o=n?"":r.media?"@media ".concat(r.media," {").concat(r.css,"}"):r.css;if(e.styleSheet)e.styleSheet.cssText=d(t,o);else{var a=document.createTextNode(o),i=e.childNodes;i[t]&&e.removeChild(i[t]),i.length?e.insertBefore(a,i[t]):e.appendChild(a)}}function f(e,t,n){var r=n.css,o=n.media,a=n.sourceMap;if(o?e.setAttribute("media",o):e.removeAttribute("media"),a&&"undefined"!=typeof btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(a))))," */")),e.styleSheet)e.styleSheet.cssText=r;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(r))}}var p=null,v=0;function m(e,t){var n,r,o;if(t.singleton){var a=v++;n=p||(p=l(t)),r=u.bind(null,n,a,!1),o=u.bind(null,n,a,!0)}else n=l(t),r=f.bind(null,n,t),o=function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(n)};return r(e),function(t){if(t){if(t.css===e.css&&t.media===e.media&&t.sourceMap===e.sourceMap)return;r(e=t)}else o()}}e.exports=function(e,t){(t=t||{}).singleton||"boolean"==typeof t.singleton||(t.singleton=(void 0===r&&(r=Boolean(window&&document&&document.all&&!window.atob)),r));var n=c(e=e||[],t);return function(e){if(e=e||[],"[object Array]"===Object.prototype.toString.call(e)){for(var r=0;r<n.length;r++){var o=i(n[r]);a[o].references--}for(var l=c(e,t),s=0;s<n.length;s++){var d=i(n[s]);0===a[d].references&&(a[d].updater(),a.splice(d,1))}n=l}}}}},t={};function n(r){if(t[r])return t[r].exports;var o=t[r]={id:r,exports:{}};return e[r](o,o.exports,n),o.exports}n.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return n.d(t,{a:t}),t},n.d=(e,t)=>{for(var r in t)n.o(t,r)&&!n.o(e,r)&&Object.defineProperty(e,r,{enumerable:!0,get:t[r]})},n.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),(()=>{var e="todo.lists",t="todo.selectedId",r=JSON.parse(localStorage.getItem(e))||[],o={selectedId:localStorage.getItem(t)},a=function(){localStorage.setItem(e,JSON.stringify(r)),localStorage.setItem(t,o.selectedId)},i=function(e){for(;e.firstChild;)e.removeChild(e.firstChild)},c=document.querySelector("#title"),l=document.querySelector("#description"),s=document.querySelector("#date"),d=document.querySelector("#priority"),u=document.querySelector("#todoindex"),f=document.querySelector(".submit"),p=document.querySelector("#myModal"),v=document.querySelector("[data-new-task-form]"),m=document.querySelector("[data-project-input]"),y=document.querySelector("[data-lists]"),h=document.querySelector("[data-project-form]"),A=document.querySelector("[data-todo-template]"),g=document.querySelector(".cards"),b=document.querySelector("#myBtn"),S=document.querySelector(".close"),E=document.querySelector(".modal-title"),C=document.querySelector(".message"),w=!1,L=function(e){e.tasks.forEach((function(t){var n=document.importNode(A.content,!0),i=n.querySelector(".card");n.querySelector(".card-title").innerText=t.title,n.querySelector(".card-description").innerText=t.description;var m=n.querySelector(".card-priority");m.innerText=t.priority,m.classList.add("btn"),n.querySelector(".card-footer").innerText="Due on ".concat(t.ddate);var y=n.querySelector(".edit-btn"),h=e.tasks.indexOf(t);y.addEventListener("click",(function(){return function(e,t){!function(){var e=document.querySelector(".modal-title");w?(p.style.pointerEvents="none",p.style.transform="scale(0)",w=!1,v.reset()):(e.textContent="Update Todo",v.value="Update",f.innerHTML="update",p.style.pointerEvents="auto",p.style.transform="scale(1)",p.style.display="block",w=!0,v.reset())}(),c.value=e.title,l.value=e.description,d.value=e.priority,s.value=e.ddate,u.value=t,f.classList.add("edit")}(t,h)})),n.querySelector(".delete-btn").addEventListener("click",(function(){var n=e.tasks.indexOf(t);u.value=n,function(e,t){var n=e.value;r.find((function(e){return e.id===o.selectedId})).tasks.splice(n,1),f.classList.contains("edit")&&f.classList.remove("edit"),a(),g.removeChild(t)}(u,i)})),g.appendChild(n),document.querySelectorAll(".card-priority").forEach((function(e){return"high"===e.textContent?e.classList.add("btn-success"):"medium"===e.textContent?e.classList.add("btn-warning"):e.classList.add("btn-danger")}))}))};const x=function e(t,n,r,o){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.title=t,this.description=n,this.ddate=r,this.priority=o,this.id=Date.now().toString()},k=function(e){return{id:Date.now().toString(),name:e,tasks:[]}};var q=n(379),B=n.n(q),I=n(426);B()(I.Z,{insert:"head",singleton:!1}),I.Z.locals;var T=function(){i(y),r.forEach((function(e){var t=document.createElement("li");t.dataset.listId=e.id,t.classList.add("list-group-item"),t.setAttribute("role","button"),t.innerText=e.name,e.id===o.selectedId&&t.classList.add("active"),y.appendChild(t)}));var e=r.find((function(e){return e.id===o.selectedId}));null==e?g.style.display="none":(g.style.style="",i(g),L(e))};T();var M=function(){T(),a()};!function(){if(0===r.length){var e=k("Default");o.selectedId=e.id,r.push(e),M()}}(),h.addEventListener("submit",(function(e){e.preventDefault();var t=m.value;if(null!=t&&""!==t){var n=k(t);m.value=null,r.push(n),M()}})),y.addEventListener("click",(function(e){e.preventDefault(),"li"===e.target.tagName.toLowerCase()&&(o.selectedId=e.target.dataset.listId,M())})),f.addEventListener("click",(function(e){if(e.preventDefault(),f.classList.contains("edit")){var t=u.value,n=r.find((function(e){return e.id===o.selectedId})),a=n.tasks[t];a.title=c.value,a.description=l.value,a.priority=d.value,a.ddate=s.value,n.tasks[t]=a,f.classList.remove("edit"),v.reset(),p.style.display="none"}else if(g=c.value,b=l.value,S=s.value,""===g?(C.innerHTML="Please fill the Title field",C.classList.add("alert","alert-danger"),0):""===b?(C.innerHTML="Please fill the description field",C.classList.add("alert","alert-danger"),0):""!==S||(C.innerHTML="Please fill the due date field",C.classList.add("alert","alert-danger"),0)){var i=c.value,m=l.value,y=s.value,h=d.value,A=new x(i,m,y,h);r.find((function(e){return e.id===o.selectedId})).tasks.push(A),C.innerHTML="",C.classList.remove("alert","alert-danger"),v.reset(),p.style.display="none"}var g,b,S;M()})),b.addEventListener("click",(function(){p.style.display="block",E.textContent="New Todo",f.innerHTML="Add",v.reset()})),S.addEventListener("click",(function(){p.style.display="none",v.reset()})),window.onclick=function(e){e.target===p&&(p.style.display="none",v.reset())}})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly90b2RvTGlzdC8uL3NyYy9zdHlsZS5jc3MiLCJ3ZWJwYWNrOi8vdG9kb0xpc3QvLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvYXBpLmpzIiwid2VicGFjazovL3RvZG9MaXN0Ly4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL2Nzc1dpdGhNYXBwaW5nVG9TdHJpbmcuanMiLCJ3ZWJwYWNrOi8vdG9kb0xpc3QvLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbmplY3RTdHlsZXNJbnRvU3R5bGVUYWcuanMiLCJ3ZWJwYWNrOi8vdG9kb0xpc3Qvd2VicGFjay9ib290c3RyYXAiLCJ3ZWJwYWNrOi8vdG9kb0xpc3Qvd2VicGFjay9ydW50aW1lL2NvbXBhdCBnZXQgZGVmYXVsdCBleHBvcnQiLCJ3ZWJwYWNrOi8vdG9kb0xpc3Qvd2VicGFjay9ydW50aW1lL2RlZmluZSBwcm9wZXJ0eSBnZXR0ZXJzIiwid2VicGFjazovL3RvZG9MaXN0L3dlYnBhY2svcnVudGltZS9oYXNPd25Qcm9wZXJ0eSBzaG9ydGhhbmQiLCJ3ZWJwYWNrOi8vdG9kb0xpc3QvLi9zcmMvbG9jYWxTdG9yYWdlLmpzIiwid2VicGFjazovL3RvZG9MaXN0Ly4vc3JjL2RvbS5qcyIsIndlYnBhY2s6Ly90b2RvTGlzdC8uL3NyYy9hZGR0b2RvLmpzIiwid2VicGFjazovL3RvZG9MaXN0Ly4vc3JjL2FkZHByb2plY3QuanMiLCJ3ZWJwYWNrOi8vdG9kb0xpc3QvLi9zcmMvc3R5bGUuY3NzPzcxNjMiLCJ3ZWJwYWNrOi8vdG9kb0xpc3QvLi9zcmMvaW5kZXguanMiXSwibmFtZXMiOlsiX19fQ1NTX0xPQURFUl9FWFBPUlRfX18iLCJwdXNoIiwibW9kdWxlIiwiaWQiLCJleHBvcnRzIiwiY3NzV2l0aE1hcHBpbmdUb1N0cmluZyIsImxpc3QiLCJ0b1N0cmluZyIsInRoaXMiLCJtYXAiLCJpdGVtIiwiY29udGVudCIsImNvbmNhdCIsImpvaW4iLCJpIiwibW9kdWxlcyIsIm1lZGlhUXVlcnkiLCJkZWR1cGUiLCJhbHJlYWR5SW1wb3J0ZWRNb2R1bGVzIiwibGVuZ3RoIiwiX2kiLCJfYXJyYXlMaWtlVG9BcnJheSIsImFyciIsImxlbiIsImFycjIiLCJBcnJheSIsIl9pdGVtIiwiaXNBcnJheSIsIl9hcnJheVdpdGhIb2xlcyIsIlN5bWJvbCIsIml0ZXJhdG9yIiwiT2JqZWN0IiwiX2FyciIsIl9uIiwiX2QiLCJfZSIsInVuZGVmaW5lZCIsIl9zIiwibmV4dCIsImRvbmUiLCJ2YWx1ZSIsImVyciIsIl9pdGVyYWJsZVRvQXJyYXlMaW1pdCIsIm8iLCJtaW5MZW4iLCJuIiwicHJvdG90eXBlIiwiY2FsbCIsInNsaWNlIiwiY29uc3RydWN0b3IiLCJuYW1lIiwiZnJvbSIsInRlc3QiLCJfdW5zdXBwb3J0ZWRJdGVyYWJsZVRvQXJyYXkiLCJUeXBlRXJyb3IiLCJfbm9uSXRlcmFibGVSZXN0IiwiY3NzTWFwcGluZyIsImJ0b2EiLCJiYXNlNjQiLCJ1bmVzY2FwZSIsImVuY29kZVVSSUNvbXBvbmVudCIsIkpTT04iLCJzdHJpbmdpZnkiLCJkYXRhIiwic291cmNlTWFwcGluZyIsInNvdXJjZVVSTHMiLCJzb3VyY2VzIiwic291cmNlIiwic291cmNlUm9vdCIsIm1lbW8iLCJnZXRUYXJnZXQiLCJ0YXJnZXQiLCJzdHlsZVRhcmdldCIsImRvY3VtZW50IiwicXVlcnlTZWxlY3RvciIsIndpbmRvdyIsIkhUTUxJRnJhbWVFbGVtZW50IiwiY29udGVudERvY3VtZW50IiwiaGVhZCIsImUiLCJzdHlsZXNJbkRvbSIsImdldEluZGV4QnlJZGVudGlmaWVyIiwiaWRlbnRpZmllciIsInJlc3VsdCIsIm1vZHVsZXNUb0RvbSIsIm9wdGlvbnMiLCJpZENvdW50TWFwIiwiaWRlbnRpZmllcnMiLCJiYXNlIiwiY291bnQiLCJpbmRleCIsIm9iaiIsImNzcyIsIm1lZGlhIiwic291cmNlTWFwIiwicmVmZXJlbmNlcyIsInVwZGF0ZXIiLCJhZGRTdHlsZSIsImluc2VydFN0eWxlRWxlbWVudCIsInN0eWxlIiwiY3JlYXRlRWxlbWVudCIsImF0dHJpYnV0ZXMiLCJub25jZSIsImtleXMiLCJmb3JFYWNoIiwia2V5Iiwic2V0QXR0cmlidXRlIiwiaW5zZXJ0IiwiRXJyb3IiLCJhcHBlbmRDaGlsZCIsInRleHRTdG9yZSIsInJlcGxhY2VUZXh0IiwicmVwbGFjZW1lbnQiLCJmaWx0ZXIiLCJCb29sZWFuIiwiYXBwbHlUb1NpbmdsZXRvblRhZyIsInJlbW92ZSIsInN0eWxlU2hlZXQiLCJjc3NUZXh0IiwiY3NzTm9kZSIsImNyZWF0ZVRleHROb2RlIiwiY2hpbGROb2RlcyIsInJlbW92ZUNoaWxkIiwiaW5zZXJ0QmVmb3JlIiwiYXBwbHlUb1RhZyIsInJlbW92ZUF0dHJpYnV0ZSIsImZpcnN0Q2hpbGQiLCJzaW5nbGV0b24iLCJzaW5nbGV0b25Db3VudGVyIiwidXBkYXRlIiwic3R5bGVJbmRleCIsImJpbmQiLCJwYXJlbnROb2RlIiwicmVtb3ZlU3R5bGVFbGVtZW50IiwibmV3T2JqIiwiYWxsIiwiYXRvYiIsImxhc3RJZGVudGlmaWVycyIsIm5ld0xpc3QiLCJuZXdMYXN0SWRlbnRpZmllcnMiLCJfaW5kZXgiLCJzcGxpY2UiLCJfX3dlYnBhY2tfbW9kdWxlX2NhY2hlX18iLCJfX3dlYnBhY2tfcmVxdWlyZV9fIiwibW9kdWxlSWQiLCJfX3dlYnBhY2tfbW9kdWxlc19fIiwiZ2V0dGVyIiwiX19lc01vZHVsZSIsImQiLCJhIiwiZGVmaW5pdGlvbiIsImRlZmluZVByb3BlcnR5IiwiZW51bWVyYWJsZSIsImdldCIsInByb3AiLCJoYXNPd25Qcm9wZXJ0eSIsIkxPQ0FMX1NUT1JBR0VfUFJPSkVDVF9LRVkiLCJMT0NBTF9TVE9SQUdFX1NFTEVDVEVEX0lEX0tFWSIsImxpc3RzIiwicGFyc2UiLCJsb2NhbFN0b3JhZ2UiLCJnZXRJdGVtIiwib2JqZWN0Iiwic2VsZWN0ZWRJZCIsInNhdmUiLCJzZXRJdGVtIiwiY2xlYXJMaXN0IiwidGl0bGUiLCJkZXNjcmlwdGlvbiIsImRkYXRlIiwicHJpb3JpdHkiLCJ0b2RvaW5kZXgiLCJzdWJtaXQiLCJtb2RhbCIsIm5ld1Rhc2tGb3JtIiwibmV3UHJvamVjdElucHV0IiwicHJvamVjdHMiLCJuZXdQcm9qZWN0Rm9ybSIsInRvZG9UZW1wbGF0ZSIsImNhcmRzIiwibW9kYWxCdG4iLCJjbG9zZU1vZGFsIiwibW9kYWxIZWFkZXIiLCJzcGFuTWVzc2FnZSIsIm1vZGFsT3BlbiIsInJlbmRlclRhc2tzIiwidGFza3MiLCJ0YXNrIiwidG9kb0xpc3QiLCJpbXBvcnROb2RlIiwiY2FyZCIsImlubmVyVGV4dCIsInRvZG9Qcmlvcml0eSIsImNsYXNzTGlzdCIsImFkZCIsImVkaXRCdG4iLCJpbmRleE9mIiwiYWRkRXZlbnRMaXN0ZW5lciIsInRvZG8iLCJwb2ludGVyRXZlbnRzIiwidHJhbnNmb3JtIiwicmVzZXQiLCJ0ZXh0Q29udGVudCIsImlubmVySFRNTCIsImRpc3BsYXkiLCJtb2RhbENsb3NlU3RhdGUiLCJlZGl0VG9kbyIsImRlbGV0ZUluZGV4IiwiZWRpdGluZGV4IiwiZmluZCIsImNvbnRhaW5zIiwiZGVsZXRlVGFzayIsInF1ZXJ5U2VsZWN0b3JBbGwiLCJlbGVtZW50IiwiRGF0ZSIsIm5vdyIsInJlbmRlciIsInByb2plY3QiLCJkYXRhc2V0IiwibGlzdElkIiwic2VsZWN0ZWRQcm9qZWN0Iiwic2F2ZUFuZFJlbmRlciIsImNyZWF0ZVByb2plY3QiLCJkZWZhdWx0UHJvamVjdCIsInByZXZlbnREZWZhdWx0IiwibmV3UHJvamVjdE5hbWUiLCJ0YWdOYW1lIiwidG9Mb3dlckNhc2UiLCJzZWxlY3RlZFByb2plY3QxIiwieCIsInkiLCJ6IiwidGl0bGUxIiwiZGVzY3JpcHRpb24xIiwiZGRhdGUxIiwicHJpb3JpdHkxIiwibmV3dG9kbyIsIkFkZFRhc2siLCJvbmNsaWNrIl0sIm1hcHBpbmdzIjoidUZBR0lBLEUsTUFBMEIsR0FBNEIsS0FFMURBLEVBQXdCQyxLQUFLLENBQUNDLEVBQU9DLEdBQUks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QVMsZ0JBQzVCLEdBRUMsS0FBTm9DLEdBQ0YvQyxFQUFZb0IsVUFBWSxvQ0FDeEJwQixFQUFZVSxVQUFVQyxJQUFJLFFBQVMsZ0JBQzVCLEdBRUMsS0FBTnFDLElBQ0ZoRCxFQUFZb0IsVUFBWSxpQ0FDeEJwQixFQUFZVSxVQUFVQyxJQUFJLFFBQVMsZ0JBQzVCLEdJcURrQixDQUN6QixJQUFNc0MsRUFBU2pFLEVBQU0vSCxNQUNmaU0sRUFBZWpFLEVBQVloSSxNQUMzQmtNLEVBQVNqRSxFQUFNakksTUFDZm1NLEVBQVlqRSxFQUFTbEksTUFDckJvTSxFQUFVLElBQUlDLEVBQVFMLEVBQVFDLEVBQWNDLEVBQVFDLEdBQ2xDN0UsRUFBTW1ELE1BQUssU0FBQzNNLEdBQUQsT0FBVUEsRUFBS0gsS0FBTytKLEVBQU9DLGNBRWhEdUIsTUFBTXpMLEtBQUsyTyxHQUMzQnJELFlBQXdCLEdBQ3hCQSxtQkFBNkIsUUFBUyxnQkFDdENULFVBQ0FELGdCQUFzQixPSmxGTCxJQUNid0QsRUFDQUMsRUFDQUMsRUlpRk5WLE9BR0Z6QyxFQUFTaUIsaUJBQWlCLFNBQVMsV0FDakN4QixnQkFBc0IsUUFDdEJTLGNBQTBCLFdBQzFCVixZQUFtQixNQUNuQkUsYUFHRk8sRUFBV2dCLGlCQUFpQixTQUFTLFdBQ25DeEIsZ0JBQXNCLE9BQ3RCQyxhQUdGbkcsT0FBT21LLFFBQVUsU0FBb0IvSixHQUMvQkEsRUFBRVIsU0FBV3NHLElBQ2ZBLGdCQUFzQixPQUN0QkMsYSIsImZpbGUiOiJtYWluLmpzIiwic291cmNlc0NvbnRlbnQiOlsiLy8gSW1wb3J0c1xuaW1wb3J0IF9fX0NTU19MT0FERVJfQVBJX1NPVVJDRU1BUF9JTVBPUlRfX18gZnJvbSBcIi4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9jc3NXaXRoTWFwcGluZ1RvU3RyaW5nLmpzXCI7XG5pbXBvcnQgX19fQ1NTX0xPQURFUl9BUElfSU1QT1JUX19fIGZyb20gXCIuLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvYXBpLmpzXCI7XG52YXIgX19fQ1NTX0xPQURFUl9FWFBPUlRfX18gPSBfX19DU1NfTE9BREVSX0FQSV9JTVBPUlRfX18oX19fQ1NTX0xPQURFUl9BUElfU09VUkNFTUFQX0lNUE9SVF9fXyk7XG4vLyBNb2R1bGVcbl9fX0NTU19MT0FERVJfRVhQT1JUX19fLnB1c2goW21vZHVsZS5pZCwgXCIubW9kYWwge1xcbiAgZGlzcGxheTogbm9uZTtcXG4gIHBvc2l0aW9uOiBmaXhlZDtcXG4gIHotaW5kZXg6IDk5O1xcbiAgbGVmdDogMDtcXG4gIHRvcDogMDtcXG4gIHdpZHRoOiAxMDAlOyAvKiBGdWxsIHdpZHRoICovXFxuICBoZWlnaHQ6IDEwMCU7IC8qIEZ1bGwgaGVpZ2h0ICovXFxuICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2IoMCwgMCwgMCk7IC8qIEZhbGxiYWNrIGNvbG9yICovXFxuICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDAsIDAsIDAsIDAuNCk7IC8qIEJsYWNrIHcvIG9wYWNpdHkgKi9cXG4gIG92ZXJmbG93OiBoaWRkZW47XFxufVxcblxcbi5tb2RhbC1jb250ZW50IHtcXG4gIGJhY2tncm91bmQtY29sb3I6ICNmZWZlZmU7XFxuICBtYXJnaW46IDE1JSBhdXRvO1xcbiAgcGFkZGluZzogMjBweDtcXG4gIGJvcmRlcjogMXB4IHNvbGlkICM4ODg7XFxuICB3aWR0aDogODAlO1xcbn1cXG5cIiwgXCJcIix7XCJ2ZXJzaW9uXCI6MyxcInNvdXJjZXNcIjpbXCJ3ZWJwYWNrOi8vLi9zcmMvc3R5bGUuY3NzXCJdLFwibmFtZXNcIjpbXSxcIm1hcHBpbmdzXCI6XCJBQUFBO0VBQ0UsYUFBYTtFQUNiLGVBQWU7RUFDZixXQUFXO0VBQ1gsT0FBTztFQUNQLE1BQU07RUFDTixXQUFXLEVBQUUsZUFBZTtFQUM1QixZQUFZLEVBQUUsZ0JBQWdCO0VBQzlCLDhCQUE4QixFQUFFLG1CQUFtQjtFQUNuRCxvQ0FBb0MsRUFBRSxxQkFBcUI7RUFDM0QsZ0JBQWdCO0FBQ2xCOztBQUVBO0VBQ0UseUJBQXlCO0VBQ3pCLGdCQUFnQjtFQUNoQixhQUFhO0VBQ2Isc0JBQXNCO0VBQ3RCLFVBQVU7QUFDWlwiLFwic291cmNlc0NvbnRlbnRcIjpbXCIubW9kYWwge1xcbiAgZGlzcGxheTogbm9uZTtcXG4gIHBvc2l0aW9uOiBmaXhlZDtcXG4gIHotaW5kZXg6IDk5O1xcbiAgbGVmdDogMDtcXG4gIHRvcDogMDtcXG4gIHdpZHRoOiAxMDAlOyAvKiBGdWxsIHdpZHRoICovXFxuICBoZWlnaHQ6IDEwMCU7IC8qIEZ1bGwgaGVpZ2h0ICovXFxuICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2IoMCwgMCwgMCk7IC8qIEZhbGxiYWNrIGNvbG9yICovXFxuICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDAsIDAsIDAsIDAuNCk7IC8qIEJsYWNrIHcvIG9wYWNpdHkgKi9cXG4gIG92ZXJmbG93OiBoaWRkZW47XFxufVxcblxcbi5tb2RhbC1jb250ZW50IHtcXG4gIGJhY2tncm91bmQtY29sb3I6ICNmZWZlZmU7XFxuICBtYXJnaW46IDE1JSBhdXRvO1xcbiAgcGFkZGluZzogMjBweDtcXG4gIGJvcmRlcjogMXB4IHNvbGlkICM4ODg7XFxuICB3aWR0aDogODAlO1xcbn1cXG5cIl0sXCJzb3VyY2VSb290XCI6XCJcIn1dKTtcbi8vIEV4cG9ydHNcbmV4cG9ydCBkZWZhdWx0IF9fX0NTU19MT0FERVJfRVhQT1JUX19fO1xuIiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbi8qXG4gIE1JVCBMaWNlbnNlIGh0dHA6Ly93d3cub3BlbnNvdXJjZS5vcmcvbGljZW5zZXMvbWl0LWxpY2Vuc2UucGhwXG4gIEF1dGhvciBUb2JpYXMgS29wcGVycyBAc29rcmFcbiovXG4vLyBjc3MgYmFzZSBjb2RlLCBpbmplY3RlZCBieSB0aGUgY3NzLWxvYWRlclxuLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIGZ1bmMtbmFtZXNcbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGNzc1dpdGhNYXBwaW5nVG9TdHJpbmcpIHtcbiAgdmFyIGxpc3QgPSBbXTsgLy8gcmV0dXJuIHRoZSBsaXN0IG9mIG1vZHVsZXMgYXMgY3NzIHN0cmluZ1xuXG4gIGxpc3QudG9TdHJpbmcgPSBmdW5jdGlvbiB0b1N0cmluZygpIHtcbiAgICByZXR1cm4gdGhpcy5tYXAoZnVuY3Rpb24gKGl0ZW0pIHtcbiAgICAgIHZhciBjb250ZW50ID0gY3NzV2l0aE1hcHBpbmdUb1N0cmluZyhpdGVtKTtcblxuICAgICAgaWYgKGl0ZW1bMl0pIHtcbiAgICAgICAgcmV0dXJuIFwiQG1lZGlhIFwiLmNvbmNhdChpdGVtWzJdLCBcIiB7XCIpLmNvbmNhdChjb250ZW50LCBcIn1cIik7XG4gICAgICB9XG5cbiAgICAgIHJldHVybiBjb250ZW50O1xuICAgIH0pLmpvaW4oJycpO1xuICB9OyAvLyBpbXBvcnQgYSBsaXN0IG9mIG1vZHVsZXMgaW50byB0aGUgbGlzdFxuICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgZnVuYy1uYW1lc1xuXG5cbiAgbGlzdC5pID0gZnVuY3Rpb24gKG1vZHVsZXMsIG1lZGlhUXVlcnksIGRlZHVwZSkge1xuICAgIGlmICh0eXBlb2YgbW9kdWxlcyA9PT0gJ3N0cmluZycpIHtcbiAgICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby1wYXJhbS1yZWFzc2lnblxuICAgICAgbW9kdWxlcyA9IFtbbnVsbCwgbW9kdWxlcywgJyddXTtcbiAgICB9XG5cbiAgICB2YXIgYWxyZWFkeUltcG9ydGVkTW9kdWxlcyA9IHt9O1xuXG4gICAgaWYgKGRlZHVwZSkge1xuICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCB0aGlzLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBwcmVmZXItZGVzdHJ1Y3R1cmluZ1xuICAgICAgICB2YXIgaWQgPSB0aGlzW2ldWzBdO1xuXG4gICAgICAgIGlmIChpZCAhPSBudWxsKSB7XG4gICAgICAgICAgYWxyZWFkeUltcG9ydGVkTW9kdWxlc1tpZF0gPSB0cnVlO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuXG4gICAgZm9yICh2YXIgX2kgPSAwOyBfaSA8IG1vZHVsZXMubGVuZ3RoOyBfaSsrKSB7XG4gICAgICB2YXIgaXRlbSA9IFtdLmNvbmNhdChtb2R1bGVzW19pXSk7XG5cbiAgICAgIGlmIChkZWR1cGUgJiYgYWxyZWFkeUltcG9ydGVkTW9kdWxlc1tpdGVtWzBdXSkge1xuICAgICAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tY29udGludWVcbiAgICAgICAgY29udGludWU7XG4gICAgICB9XG5cbiAgICAgIGlmIChtZWRpYVF1ZXJ5KSB7XG4gICAgICAgIGlmICghaXRlbVsyXSkge1xuICAgICAgICAgIGl0ZW1bMl0gPSBtZWRpYVF1ZXJ5O1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIGl0ZW1bMl0gPSBcIlwiLmNvbmNhdChtZWRpYVF1ZXJ5LCBcIiBhbmQgXCIpLmNvbmNhdChpdGVtWzJdKTtcbiAgICAgICAgfVxuICAgICAgfVxuXG4gICAgICBsaXN0LnB1c2goaXRlbSk7XG4gICAgfVxuICB9O1xuXG4gIHJldHVybiBsaXN0O1xufTsiLCJcInVzZSBzdHJpY3RcIjtcblxuZnVuY3Rpb24gX3NsaWNlZFRvQXJyYXkoYXJyLCBpKSB7IHJldHVybiBfYXJyYXlXaXRoSG9sZXMoYXJyKSB8fCBfaXRlcmFibGVUb0FycmF5TGltaXQoYXJyLCBpKSB8fCBfdW5zdXBwb3J0ZWRJdGVyYWJsZVRvQXJyYXkoYXJyLCBpKSB8fCBfbm9uSXRlcmFibGVSZXN0KCk7IH1cblxuZnVuY3Rpb24gX25vbkl0ZXJhYmxlUmVzdCgpIHsgdGhyb3cgbmV3IFR5cGVFcnJvcihcIkludmFsaWQgYXR0ZW1wdCB0byBkZXN0cnVjdHVyZSBub24taXRlcmFibGUgaW5zdGFuY2UuXFxuSW4gb3JkZXIgdG8gYmUgaXRlcmFibGUsIG5vbi1hcnJheSBvYmplY3RzIG11c3QgaGF2ZSBhIFtTeW1ib2wuaXRlcmF0b3JdKCkgbWV0aG9kLlwiKTsgfVxuXG5mdW5jdGlvbiBfdW5zdXBwb3J0ZWRJdGVyYWJsZVRvQXJyYXkobywgbWluTGVuKSB7IGlmICghbykgcmV0dXJuOyBpZiAodHlwZW9mIG8gPT09IFwic3RyaW5nXCIpIHJldHVybiBfYXJyYXlMaWtlVG9BcnJheShvLCBtaW5MZW4pOyB2YXIgbiA9IE9iamVjdC5wcm90b3R5cGUudG9TdHJpbmcuY2FsbChvKS5zbGljZSg4LCAtMSk7IGlmIChuID09PSBcIk9iamVjdFwiICYmIG8uY29uc3RydWN0b3IpIG4gPSBvLmNvbnN0cnVjdG9yLm5hbWU7IGlmIChuID09PSBcIk1hcFwiIHx8IG4gPT09IFwiU2V0XCIpIHJldHVybiBBcnJheS5mcm9tKG8pOyBpZiAobiA9PT0gXCJBcmd1bWVudHNcIiB8fCAvXig/OlVpfEkpbnQoPzo4fDE2fDMyKSg/OkNsYW1wZWQpP0FycmF5JC8udGVzdChuKSkgcmV0dXJuIF9hcnJheUxpa2VUb0FycmF5KG8sIG1pbkxlbik7IH1cblxuZnVuY3Rpb24gX2FycmF5TGlrZVRvQXJyYXkoYXJyLCBsZW4pIHsgaWYgKGxlbiA9PSBudWxsIHx8IGxlbiA+IGFyci5sZW5ndGgpIGxlbiA9IGFyci5sZW5ndGg7IGZvciAodmFyIGkgPSAwLCBhcnIyID0gbmV3IEFycmF5KGxlbik7IGkgPCBsZW47IGkrKykgeyBhcnIyW2ldID0gYXJyW2ldOyB9IHJldHVybiBhcnIyOyB9XG5cbmZ1bmN0aW9uIF9pdGVyYWJsZVRvQXJyYXlMaW1pdChhcnIsIGkpIHsgaWYgKHR5cGVvZiBTeW1ib2wgPT09IFwidW5kZWZpbmVkXCIgfHwgIShTeW1ib2wuaXRlcmF0b3IgaW4gT2JqZWN0KGFycikpKSByZXR1cm47IHZhciBfYXJyID0gW107IHZhciBfbiA9IHRydWU7IHZhciBfZCA9IGZhbHNlOyB2YXIgX2UgPSB1bmRlZmluZWQ7IHRyeSB7IGZvciAodmFyIF9pID0gYXJyW1N5bWJvbC5pdGVyYXRvcl0oKSwgX3M7ICEoX24gPSAoX3MgPSBfaS5uZXh0KCkpLmRvbmUpOyBfbiA9IHRydWUpIHsgX2Fyci5wdXNoKF9zLnZhbHVlKTsgaWYgKGkgJiYgX2Fyci5sZW5ndGggPT09IGkpIGJyZWFrOyB9IH0gY2F0Y2ggKGVycikgeyBfZCA9IHRydWU7IF9lID0gZXJyOyB9IGZpbmFsbHkgeyB0cnkgeyBpZiAoIV9uICYmIF9pW1wicmV0dXJuXCJdICE9IG51bGwpIF9pW1wicmV0dXJuXCJdKCk7IH0gZmluYWxseSB7IGlmIChfZCkgdGhyb3cgX2U7IH0gfSByZXR1cm4gX2FycjsgfVxuXG5mdW5jdGlvbiBfYXJyYXlXaXRoSG9sZXMoYXJyKSB7IGlmIChBcnJheS5pc0FycmF5KGFycikpIHJldHVybiBhcnI7IH1cblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiBjc3NXaXRoTWFwcGluZ1RvU3RyaW5nKGl0ZW0pIHtcbiAgdmFyIF9pdGVtID0gX3NsaWNlZFRvQXJyYXkoaXRlbSwgNCksXG4gICAgICBjb250ZW50ID0gX2l0ZW1bMV0sXG4gICAgICBjc3NNYXBwaW5nID0gX2l0ZW1bM107XG5cbiAgaWYgKHR5cGVvZiBidG9hID09PSAnZnVuY3Rpb24nKSB7XG4gICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLXVuZGVmXG4gICAgdmFyIGJhc2U2NCA9IGJ0b2EodW5lc2NhcGUoZW5jb2RlVVJJQ29tcG9uZW50KEpTT04uc3RyaW5naWZ5KGNzc01hcHBpbmcpKSkpO1xuICAgIHZhciBkYXRhID0gXCJzb3VyY2VNYXBwaW5nVVJMPWRhdGE6YXBwbGljYXRpb24vanNvbjtjaGFyc2V0PXV0Zi04O2Jhc2U2NCxcIi5jb25jYXQoYmFzZTY0KTtcbiAgICB2YXIgc291cmNlTWFwcGluZyA9IFwiLyojIFwiLmNvbmNhdChkYXRhLCBcIiAqL1wiKTtcbiAgICB2YXIgc291cmNlVVJMcyA9IGNzc01hcHBpbmcuc291cmNlcy5tYXAoZnVuY3Rpb24gKHNvdXJjZSkge1xuICAgICAgcmV0dXJuIFwiLyojIHNvdXJjZVVSTD1cIi5jb25jYXQoY3NzTWFwcGluZy5zb3VyY2VSb290IHx8ICcnKS5jb25jYXQoc291cmNlLCBcIiAqL1wiKTtcbiAgICB9KTtcbiAgICByZXR1cm4gW2NvbnRlbnRdLmNvbmNhdChzb3VyY2VVUkxzKS5jb25jYXQoW3NvdXJjZU1hcHBpbmddKS5qb2luKCdcXG4nKTtcbiAgfVxuXG4gIHJldHVybiBbY29udGVudF0uam9pbignXFxuJyk7XG59OyIsIlwidXNlIHN0cmljdFwiO1xuXG52YXIgaXNPbGRJRSA9IGZ1bmN0aW9uIGlzT2xkSUUoKSB7XG4gIHZhciBtZW1vO1xuICByZXR1cm4gZnVuY3Rpb24gbWVtb3JpemUoKSB7XG4gICAgaWYgKHR5cGVvZiBtZW1vID09PSAndW5kZWZpbmVkJykge1xuICAgICAgLy8gVGVzdCBmb3IgSUUgPD0gOSBhcyBwcm9wb3NlZCBieSBCcm93c2VyaGFja3NcbiAgICAgIC8vIEBzZWUgaHR0cDovL2Jyb3dzZXJoYWNrcy5jb20vI2hhY2stZTcxZDg2OTJmNjUzMzQxNzNmZWU3MTVjMjIyY2I4MDVcbiAgICAgIC8vIFRlc3RzIGZvciBleGlzdGVuY2Ugb2Ygc3RhbmRhcmQgZ2xvYmFscyBpcyB0byBhbGxvdyBzdHlsZS1sb2FkZXJcbiAgICAgIC8vIHRvIG9wZXJhdGUgY29ycmVjdGx5IGludG8gbm9uLXN0YW5kYXJkIGVudmlyb25tZW50c1xuICAgICAgLy8gQHNlZSBodHRwczovL2dpdGh1Yi5jb20vd2VicGFjay1jb250cmliL3N0eWxlLWxvYWRlci9pc3N1ZXMvMTc3XG4gICAgICBtZW1vID0gQm9vbGVhbih3aW5kb3cgJiYgZG9jdW1lbnQgJiYgZG9jdW1lbnQuYWxsICYmICF3aW5kb3cuYXRvYik7XG4gICAgfVxuXG4gICAgcmV0dXJuIG1lbW87XG4gIH07XG59KCk7XG5cbnZhciBnZXRUYXJnZXQgPSBmdW5jdGlvbiBnZXRUYXJnZXQoKSB7XG4gIHZhciBtZW1vID0ge307XG4gIHJldHVybiBmdW5jdGlvbiBtZW1vcml6ZSh0YXJnZXQpIHtcbiAgICBpZiAodHlwZW9mIG1lbW9bdGFyZ2V0XSA9PT0gJ3VuZGVmaW5lZCcpIHtcbiAgICAgIHZhciBzdHlsZVRhcmdldCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IodGFyZ2V0KTsgLy8gU3BlY2lhbCBjYXNlIHRvIHJldHVybiBoZWFkIG9mIGlmcmFtZSBpbnN0ZWFkIG9mIGlmcmFtZSBpdHNlbGZcblxuICAgICAgaWYgKHdpbmRvdy5IVE1MSUZyYW1lRWxlbWVudCAmJiBzdHlsZVRhcmdldCBpbnN0YW5jZW9mIHdpbmRvdy5IVE1MSUZyYW1lRWxlbWVudCkge1xuICAgICAgICB0cnkge1xuICAgICAgICAgIC8vIFRoaXMgd2lsbCB0aHJvdyBhbiBleGNlcHRpb24gaWYgYWNjZXNzIHRvIGlmcmFtZSBpcyBibG9ja2VkXG4gICAgICAgICAgLy8gZHVlIHRvIGNyb3NzLW9yaWdpbiByZXN0cmljdGlvbnNcbiAgICAgICAgICBzdHlsZVRhcmdldCA9IHN0eWxlVGFyZ2V0LmNvbnRlbnREb2N1bWVudC5oZWFkO1xuICAgICAgICB9IGNhdGNoIChlKSB7XG4gICAgICAgICAgLy8gaXN0YW5idWwgaWdub3JlIG5leHRcbiAgICAgICAgICBzdHlsZVRhcmdldCA9IG51bGw7XG4gICAgICAgIH1cbiAgICAgIH1cblxuICAgICAgbWVtb1t0YXJnZXRdID0gc3R5bGVUYXJnZXQ7XG4gICAgfVxuXG4gICAgcmV0dXJuIG1lbW9bdGFyZ2V0XTtcbiAgfTtcbn0oKTtcblxudmFyIHN0eWxlc0luRG9tID0gW107XG5cbmZ1bmN0aW9uIGdldEluZGV4QnlJZGVudGlmaWVyKGlkZW50aWZpZXIpIHtcbiAgdmFyIHJlc3VsdCA9IC0xO1xuXG4gIGZvciAodmFyIGkgPSAwOyBpIDwgc3R5bGVzSW5Eb20ubGVuZ3RoOyBpKyspIHtcbiAgICBpZiAoc3R5bGVzSW5Eb21baV0uaWRlbnRpZmllciA9PT0gaWRlbnRpZmllcikge1xuICAgICAgcmVzdWx0ID0gaTtcbiAgICAgIGJyZWFrO1xuICAgIH1cbiAgfVxuXG4gIHJldHVybiByZXN1bHQ7XG59XG5cbmZ1bmN0aW9uIG1vZHVsZXNUb0RvbShsaXN0LCBvcHRpb25zKSB7XG4gIHZhciBpZENvdW50TWFwID0ge307XG4gIHZhciBpZGVudGlmaWVycyA9IFtdO1xuXG4gIGZvciAodmFyIGkgPSAwOyBpIDwgbGlzdC5sZW5ndGg7IGkrKykge1xuICAgIHZhciBpdGVtID0gbGlzdFtpXTtcbiAgICB2YXIgaWQgPSBvcHRpb25zLmJhc2UgPyBpdGVtWzBdICsgb3B0aW9ucy5iYXNlIDogaXRlbVswXTtcbiAgICB2YXIgY291bnQgPSBpZENvdW50TWFwW2lkXSB8fCAwO1xuICAgIHZhciBpZGVudGlmaWVyID0gXCJcIi5jb25jYXQoaWQsIFwiIFwiKS5jb25jYXQoY291bnQpO1xuICAgIGlkQ291bnRNYXBbaWRdID0gY291bnQgKyAxO1xuICAgIHZhciBpbmRleCA9IGdldEluZGV4QnlJZGVudGlmaWVyKGlkZW50aWZpZXIpO1xuICAgIHZhciBvYmogPSB7XG4gICAgICBjc3M6IGl0ZW1bMV0sXG4gICAgICBtZWRpYTogaXRlbVsyXSxcbiAgICAgIHNvdXJjZU1hcDogaXRlbVszXVxuICAgIH07XG5cbiAgICBpZiAoaW5kZXggIT09IC0xKSB7XG4gICAgICBzdHlsZXNJbkRvbVtpbmRleF0ucmVmZXJlbmNlcysrO1xuICAgICAgc3R5bGVzSW5Eb21baW5kZXhdLnVwZGF0ZXIob2JqKTtcbiAgICB9IGVsc2Uge1xuICAgICAgc3R5bGVzSW5Eb20ucHVzaCh7XG4gICAgICAgIGlkZW50aWZpZXI6IGlkZW50aWZpZXIsXG4gICAgICAgIHVwZGF0ZXI6IGFkZFN0eWxlKG9iaiwgb3B0aW9ucyksXG4gICAgICAgIHJlZmVyZW5jZXM6IDFcbiAgICAgIH0pO1xuICAgIH1cblxuICAgIGlkZW50aWZpZXJzLnB1c2goaWRlbnRpZmllcik7XG4gIH1cblxuICByZXR1cm4gaWRlbnRpZmllcnM7XG59XG5cbmZ1bmN0aW9uIGluc2VydFN0eWxlRWxlbWVudChvcHRpb25zKSB7XG4gIHZhciBzdHlsZSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ3N0eWxlJyk7XG4gIHZhciBhdHRyaWJ1dGVzID0gb3B0aW9ucy5hdHRyaWJ1dGVzIHx8IHt9O1xuXG4gIGlmICh0eXBlb2YgYXR0cmlidXRlcy5ub25jZSA9PT0gJ3VuZGVmaW5lZCcpIHtcbiAgICB2YXIgbm9uY2UgPSB0eXBlb2YgX193ZWJwYWNrX25vbmNlX18gIT09ICd1bmRlZmluZWQnID8gX193ZWJwYWNrX25vbmNlX18gOiBudWxsO1xuXG4gICAgaWYgKG5vbmNlKSB7XG4gICAgICBhdHRyaWJ1dGVzLm5vbmNlID0gbm9uY2U7XG4gICAgfVxuICB9XG5cbiAgT2JqZWN0LmtleXMoYXR0cmlidXRlcykuZm9yRWFjaChmdW5jdGlvbiAoa2V5KSB7XG4gICAgc3R5bGUuc2V0QXR0cmlidXRlKGtleSwgYXR0cmlidXRlc1trZXldKTtcbiAgfSk7XG5cbiAgaWYgKHR5cGVvZiBvcHRpb25zLmluc2VydCA9PT0gJ2Z1bmN0aW9uJykge1xuICAgIG9wdGlvbnMuaW5zZXJ0KHN0eWxlKTtcbiAgfSBlbHNlIHtcbiAgICB2YXIgdGFyZ2V0ID0gZ2V0VGFyZ2V0KG9wdGlvbnMuaW5zZXJ0IHx8ICdoZWFkJyk7XG5cbiAgICBpZiAoIXRhcmdldCkge1xuICAgICAgdGhyb3cgbmV3IEVycm9yKFwiQ291bGRuJ3QgZmluZCBhIHN0eWxlIHRhcmdldC4gVGhpcyBwcm9iYWJseSBtZWFucyB0aGF0IHRoZSB2YWx1ZSBmb3IgdGhlICdpbnNlcnQnIHBhcmFtZXRlciBpcyBpbnZhbGlkLlwiKTtcbiAgICB9XG5cbiAgICB0YXJnZXQuYXBwZW5kQ2hpbGQoc3R5bGUpO1xuICB9XG5cbiAgcmV0dXJuIHN0eWxlO1xufVxuXG5mdW5jdGlvbiByZW1vdmVTdHlsZUVsZW1lbnQoc3R5bGUpIHtcbiAgLy8gaXN0YW5idWwgaWdub3JlIGlmXG4gIGlmIChzdHlsZS5wYXJlbnROb2RlID09PSBudWxsKSB7XG4gICAgcmV0dXJuIGZhbHNlO1xuICB9XG5cbiAgc3R5bGUucGFyZW50Tm9kZS5yZW1vdmVDaGlsZChzdHlsZSk7XG59XG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAgKi9cblxuXG52YXIgcmVwbGFjZVRleHQgPSBmdW5jdGlvbiByZXBsYWNlVGV4dCgpIHtcbiAgdmFyIHRleHRTdG9yZSA9IFtdO1xuICByZXR1cm4gZnVuY3Rpb24gcmVwbGFjZShpbmRleCwgcmVwbGFjZW1lbnQpIHtcbiAgICB0ZXh0U3RvcmVbaW5kZXhdID0gcmVwbGFjZW1lbnQ7XG4gICAgcmV0dXJuIHRleHRTdG9yZS5maWx0ZXIoQm9vbGVhbikuam9pbignXFxuJyk7XG4gIH07XG59KCk7XG5cbmZ1bmN0aW9uIGFwcGx5VG9TaW5nbGV0b25UYWcoc3R5bGUsIGluZGV4LCByZW1vdmUsIG9iaikge1xuICB2YXIgY3NzID0gcmVtb3ZlID8gJycgOiBvYmoubWVkaWEgPyBcIkBtZWRpYSBcIi5jb25jYXQob2JqLm1lZGlhLCBcIiB7XCIpLmNvbmNhdChvYmouY3NzLCBcIn1cIikgOiBvYmouY3NzOyAvLyBGb3Igb2xkIElFXG5cbiAgLyogaXN0YW5idWwgaWdub3JlIGlmICAqL1xuXG4gIGlmIChzdHlsZS5zdHlsZVNoZWV0KSB7XG4gICAgc3R5bGUuc3R5bGVTaGVldC5jc3NUZXh0ID0gcmVwbGFjZVRleHQoaW5kZXgsIGNzcyk7XG4gIH0gZWxzZSB7XG4gICAgdmFyIGNzc05vZGUgPSBkb2N1bWVudC5jcmVhdGVUZXh0Tm9kZShjc3MpO1xuICAgIHZhciBjaGlsZE5vZGVzID0gc3R5bGUuY2hpbGROb2RlcztcblxuICAgIGlmIChjaGlsZE5vZGVzW2luZGV4XSkge1xuICAgICAgc3R5bGUucmVtb3ZlQ2hpbGQoY2hpbGROb2Rlc1tpbmRleF0pO1xuICAgIH1cblxuICAgIGlmIChjaGlsZE5vZGVzLmxlbmd0aCkge1xuICAgICAgc3R5bGUuaW5zZXJ0QmVmb3JlKGNzc05vZGUsIGNoaWxkTm9kZXNbaW5kZXhdKTtcbiAgICB9IGVsc2Uge1xuICAgICAgc3R5bGUuYXBwZW5kQ2hpbGQoY3NzTm9kZSk7XG4gICAgfVxuICB9XG59XG5cbmZ1bmN0aW9uIGFwcGx5VG9UYWcoc3R5bGUsIG9wdGlvbnMsIG9iaikge1xuICB2YXIgY3NzID0gb2JqLmNzcztcbiAgdmFyIG1lZGlhID0gb2JqLm1lZGlhO1xuICB2YXIgc291cmNlTWFwID0gb2JqLnNvdXJjZU1hcDtcblxuICBpZiAobWVkaWEpIHtcbiAgICBzdHlsZS5zZXRBdHRyaWJ1dGUoJ21lZGlhJywgbWVkaWEpO1xuICB9IGVsc2Uge1xuICAgIHN0eWxlLnJlbW92ZUF0dHJpYnV0ZSgnbWVkaWEnKTtcbiAgfVxuXG4gIGlmIChzb3VyY2VNYXAgJiYgdHlwZW9mIGJ0b2EgIT09ICd1bmRlZmluZWQnKSB7XG4gICAgY3NzICs9IFwiXFxuLyojIHNvdXJjZU1hcHBpbmdVUkw9ZGF0YTphcHBsaWNhdGlvbi9qc29uO2Jhc2U2NCxcIi5jb25jYXQoYnRvYSh1bmVzY2FwZShlbmNvZGVVUklDb21wb25lbnQoSlNPTi5zdHJpbmdpZnkoc291cmNlTWFwKSkpKSwgXCIgKi9cIik7XG4gIH0gLy8gRm9yIG9sZCBJRVxuXG4gIC8qIGlzdGFuYnVsIGlnbm9yZSBpZiAgKi9cblxuXG4gIGlmIChzdHlsZS5zdHlsZVNoZWV0KSB7XG4gICAgc3R5bGUuc3R5bGVTaGVldC5jc3NUZXh0ID0gY3NzO1xuICB9IGVsc2Uge1xuICAgIHdoaWxlIChzdHlsZS5maXJzdENoaWxkKSB7XG4gICAgICBzdHlsZS5yZW1vdmVDaGlsZChzdHlsZS5maXJzdENoaWxkKTtcbiAgICB9XG5cbiAgICBzdHlsZS5hcHBlbmRDaGlsZChkb2N1bWVudC5jcmVhdGVUZXh0Tm9kZShjc3MpKTtcbiAgfVxufVxuXG52YXIgc2luZ2xldG9uID0gbnVsbDtcbnZhciBzaW5nbGV0b25Db3VudGVyID0gMDtcblxuZnVuY3Rpb24gYWRkU3R5bGUob2JqLCBvcHRpb25zKSB7XG4gIHZhciBzdHlsZTtcbiAgdmFyIHVwZGF0ZTtcbiAgdmFyIHJlbW92ZTtcblxuICBpZiAob3B0aW9ucy5zaW5nbGV0b24pIHtcbiAgICB2YXIgc3R5bGVJbmRleCA9IHNpbmdsZXRvbkNvdW50ZXIrKztcbiAgICBzdHlsZSA9IHNpbmdsZXRvbiB8fCAoc2luZ2xldG9uID0gaW5zZXJ0U3R5bGVFbGVtZW50KG9wdGlvbnMpKTtcbiAgICB1cGRhdGUgPSBhcHBseVRvU2luZ2xldG9uVGFnLmJpbmQobnVsbCwgc3R5bGUsIHN0eWxlSW5kZXgsIGZhbHNlKTtcbiAgICByZW1vdmUgPSBhcHBseVRvU2luZ2xldG9uVGFnLmJpbmQobnVsbCwgc3R5bGUsIHN0eWxlSW5kZXgsIHRydWUpO1xuICB9IGVsc2Uge1xuICAgIHN0eWxlID0gaW5zZXJ0U3R5bGVFbGVtZW50KG9wdGlvbnMpO1xuICAgIHVwZGF0ZSA9IGFwcGx5VG9UYWcuYmluZChudWxsLCBzdHlsZSwgb3B0aW9ucyk7XG5cbiAgICByZW1vdmUgPSBmdW5jdGlvbiByZW1vdmUoKSB7XG4gICAgICByZW1vdmVTdHlsZUVsZW1lbnQoc3R5bGUpO1xuICAgIH07XG4gIH1cblxuICB1cGRhdGUob2JqKTtcbiAgcmV0dXJuIGZ1bmN0aW9uIHVwZGF0ZVN0eWxlKG5ld09iaikge1xuICAgIGlmIChuZXdPYmopIHtcbiAgICAgIGlmIChuZXdPYmouY3NzID09PSBvYmouY3NzICYmIG5ld09iai5tZWRpYSA9PT0gb2JqLm1lZGlhICYmIG5ld09iai5zb3VyY2VNYXAgPT09IG9iai5zb3VyY2VNYXApIHtcbiAgICAgICAgcmV0dXJuO1xuICAgICAgfVxuXG4gICAgICB1cGRhdGUob2JqID0gbmV3T2JqKTtcbiAgICB9IGVsc2Uge1xuICAgICAgcmVtb3ZlKCk7XG4gICAgfVxuICB9O1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChsaXN0LCBvcHRpb25zKSB7XG4gIG9wdGlvbnMgPSBvcHRpb25zIHx8IHt9OyAvLyBGb3JjZSBzaW5nbGUtdGFnIHNvbHV0aW9uIG9uIElFNi05LCB3aGljaCBoYXMgYSBoYXJkIGxpbWl0IG9uIHRoZSAjIG9mIDxzdHlsZT5cbiAgLy8gdGFncyBpdCB3aWxsIGFsbG93IG9uIGEgcGFnZVxuXG4gIGlmICghb3B0aW9ucy5zaW5nbGV0b24gJiYgdHlwZW9mIG9wdGlvbnMuc2luZ2xldG9uICE9PSAnYm9vbGVhbicpIHtcbiAgICBvcHRpb25zLnNpbmdsZXRvbiA9IGlzT2xkSUUoKTtcbiAgfVxuXG4gIGxpc3QgPSBsaXN0IHx8IFtdO1xuICB2YXIgbGFzdElkZW50aWZpZXJzID0gbW9kdWxlc1RvRG9tKGxpc3QsIG9wdGlvbnMpO1xuICByZXR1cm4gZnVuY3Rpb24gdXBkYXRlKG5ld0xpc3QpIHtcbiAgICBuZXdMaXN0ID0gbmV3TGlzdCB8fCBbXTtcblxuICAgIGlmIChPYmplY3QucHJvdG90eXBlLnRvU3RyaW5nLmNhbGwobmV3TGlzdCkgIT09ICdbb2JqZWN0IEFycmF5XScpIHtcbiAgICAgIHJldHVybjtcbiAgICB9XG5cbiAgICBmb3IgKHZhciBpID0gMDsgaSA8IGxhc3RJZGVudGlmaWVycy5sZW5ndGg7IGkrKykge1xuICAgICAgdmFyIGlkZW50aWZpZXIgPSBsYXN0SWRlbnRpZmllcnNbaV07XG4gICAgICB2YXIgaW5kZXggPSBnZXRJbmRleEJ5SWRlbnRpZmllcihpZGVudGlmaWVyKTtcbiAgICAgIHN0eWxlc0luRG9tW2luZGV4XS5yZWZlcmVuY2VzLS07XG4gICAgfVxuXG4gICAgdmFyIG5ld0xhc3RJZGVudGlmaWVycyA9IG1vZHVsZXNUb0RvbShuZXdMaXN0LCBvcHRpb25zKTtcblxuICAgIGZvciAodmFyIF9pID0gMDsgX2kgPCBsYXN0SWRlbnRpZmllcnMubGVuZ3RoOyBfaSsrKSB7XG4gICAgICB2YXIgX2lkZW50aWZpZXIgPSBsYXN0SWRlbnRpZmllcnNbX2ldO1xuXG4gICAgICB2YXIgX2luZGV4ID0gZ2V0SW5kZXhCeUlkZW50aWZpZXIoX2lkZW50aWZpZXIpO1xuXG4gICAgICBpZiAoc3R5bGVzSW5Eb21bX2luZGV4XS5yZWZlcmVuY2VzID09PSAwKSB7XG4gICAgICAgIHN0eWxlc0luRG9tW19pbmRleF0udXBkYXRlcigpO1xuXG4gICAgICAgIHN0eWxlc0luRG9tLnNwbGljZShfaW5kZXgsIDEpO1xuICAgICAgfVxuICAgIH1cblxuICAgIGxhc3RJZGVudGlmaWVycyA9IG5ld0xhc3RJZGVudGlmaWVycztcbiAgfTtcbn07IiwiLy8gVGhlIG1vZHVsZSBjYWNoZVxudmFyIF9fd2VicGFja19tb2R1bGVfY2FjaGVfXyA9IHt9O1xuXG4vLyBUaGUgcmVxdWlyZSBmdW5jdGlvblxuZnVuY3Rpb24gX193ZWJwYWNrX3JlcXVpcmVfXyhtb2R1bGVJZCkge1xuXHQvLyBDaGVjayBpZiBtb2R1bGUgaXMgaW4gY2FjaGVcblx0aWYoX193ZWJwYWNrX21vZHVsZV9jYWNoZV9fW21vZHVsZUlkXSkge1xuXHRcdHJldHVybiBfX3dlYnBhY2tfbW9kdWxlX2NhY2hlX19bbW9kdWxlSWRdLmV4cG9ydHM7XG5cdH1cblx0Ly8gQ3JlYXRlIGEgbmV3IG1vZHVsZSAoYW5kIHB1dCBpdCBpbnRvIHRoZSBjYWNoZSlcblx0dmFyIG1vZHVsZSA9IF9fd2VicGFja19tb2R1bGVfY2FjaGVfX1ttb2R1bGVJZF0gPSB7XG5cdFx0aWQ6IG1vZHVsZUlkLFxuXHRcdC8vIG5vIG1vZHVsZS5sb2FkZWQgbmVlZGVkXG5cdFx0ZXhwb3J0czoge31cblx0fTtcblxuXHQvLyBFeGVjdXRlIHRoZSBtb2R1bGUgZnVuY3Rpb25cblx0X193ZWJwYWNrX21vZHVsZXNfX1ttb2R1bGVJZF0obW9kdWxlLCBtb2R1bGUuZXhwb3J0cywgX193ZWJwYWNrX3JlcXVpcmVfXyk7XG5cblx0Ly8gUmV0dXJuIHRoZSBleHBvcnRzIG9mIHRoZSBtb2R1bGVcblx0cmV0dXJuIG1vZHVsZS5leHBvcnRzO1xufVxuXG4iLCIvLyBnZXREZWZhdWx0RXhwb3J0IGZ1bmN0aW9uIGZvciBjb21wYXRpYmlsaXR5IHdpdGggbm9uLWhhcm1vbnkgbW9kdWxlc1xuX193ZWJwYWNrX3JlcXVpcmVfXy5uID0gKG1vZHVsZSkgPT4ge1xuXHR2YXIgZ2V0dGVyID0gbW9kdWxlICYmIG1vZHVsZS5fX2VzTW9kdWxlID9cblx0XHQoKSA9PiAobW9kdWxlWydkZWZhdWx0J10pIDpcblx0XHQoKSA9PiAobW9kdWxlKTtcblx0X193ZWJwYWNrX3JlcXVpcmVfXy5kKGdldHRlciwgeyBhOiBnZXR0ZXIgfSk7XG5cdHJldHVybiBnZXR0ZXI7XG59OyIsIi8vIGRlZmluZSBnZXR0ZXIgZnVuY3Rpb25zIGZvciBoYXJtb255IGV4cG9ydHNcbl9fd2VicGFja19yZXF1aXJlX18uZCA9IChleHBvcnRzLCBkZWZpbml0aW9uKSA9PiB7XG5cdGZvcih2YXIga2V5IGluIGRlZmluaXRpb24pIHtcblx0XHRpZihfX3dlYnBhY2tfcmVxdWlyZV9fLm8oZGVmaW5pdGlvbiwga2V5KSAmJiAhX193ZWJwYWNrX3JlcXVpcmVfXy5vKGV4cG9ydHMsIGtleSkpIHtcblx0XHRcdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBrZXksIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBkZWZpbml0aW9uW2tleV0gfSk7XG5cdFx0fVxuXHR9XG59OyIsIl9fd2VicGFja19yZXF1aXJlX18ubyA9IChvYmosIHByb3ApID0+IChPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwob2JqLCBwcm9wKSkiLCJjb25zdCBMT0NBTF9TVE9SQUdFX1BST0pFQ1RfS0VZID0gJ3RvZG8ubGlzdHMnO1xuY29uc3QgTE9DQUxfU1RPUkFHRV9TRUxFQ1RFRF9JRF9LRVkgPSAndG9kby5zZWxlY3RlZElkJztcblxuY29uc3QgbGlzdHMgPSBKU09OLnBhcnNlKGxvY2FsU3RvcmFnZS5nZXRJdGVtKExPQ0FMX1NUT1JBR0VfUFJPSkVDVF9LRVkpKSB8fCBbXTtcblxuY29uc3Qgb2JqZWN0ID0ge1xuICBzZWxlY3RlZElkOiBsb2NhbFN0b3JhZ2UuZ2V0SXRlbShMT0NBTF9TVE9SQUdFX1NFTEVDVEVEX0lEX0tFWSksXG59O1xuXG5jb25zdCBzYXZlID0gKCkgPT4ge1xuICBsb2NhbFN0b3JhZ2Uuc2V0SXRlbShMT0NBTF9TVE9SQUdFX1BST0pFQ1RfS0VZLCBKU09OLnN0cmluZ2lmeShsaXN0cykpO1xuICBsb2NhbFN0b3JhZ2Uuc2V0SXRlbShMT0NBTF9TVE9SQUdFX1NFTEVDVEVEX0lEX0tFWSwgb2JqZWN0LnNlbGVjdGVkSWQpO1xufTtcblxuY29uc3QgY2xlYXJMaXN0ID0gKGxpc3QpID0+IHtcbiAgd2hpbGUgKGxpc3QuZmlyc3RDaGlsZCkge1xuICAgIGxpc3QucmVtb3ZlQ2hpbGQobGlzdC5maXJzdENoaWxkKTtcbiAgfVxufTtcblxuZXhwb3J0IHtcbiAgbGlzdHMsIG9iamVjdCwgc2F2ZSwgY2xlYXJMaXN0LFxufTtcbiIsImltcG9ydCB7XG4gIGxpc3RzLCBvYmplY3QsIGNsZWFyTGlzdCwgc2F2ZSxcbn0gZnJvbSAnLi9sb2NhbFN0b3JhZ2UnO1xuXG5jb25zdCB0aXRsZSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJyN0aXRsZScpO1xuY29uc3QgZGVzY3JpcHRpb24gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcjZGVzY3JpcHRpb24nKTtcbmNvbnN0IGRkYXRlID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignI2RhdGUnKTtcbmNvbnN0IHByaW9yaXR5ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignI3ByaW9yaXR5Jyk7XG5jb25zdCB0b2RvaW5kZXggPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcjdG9kb2luZGV4Jyk7XG5jb25zdCBzdWJtaXQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcuc3VibWl0Jyk7XG5jb25zdCBtb2RhbCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJyNteU1vZGFsJyk7XG5jb25zdCBuZXdUYXNrRm9ybSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJ1tkYXRhLW5ldy10YXNrLWZvcm1dJyk7XG5jb25zdCBuZXdQcm9qZWN0SW5wdXQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCdbZGF0YS1wcm9qZWN0LWlucHV0XScpO1xuXG5jb25zdCBwcm9qZWN0cyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJ1tkYXRhLWxpc3RzXScpO1xuY29uc3QgbmV3UHJvamVjdEZvcm0gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCdbZGF0YS1wcm9qZWN0LWZvcm1dJyk7XG5jb25zdCB0b2RvVGVtcGxhdGUgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCdbZGF0YS10b2RvLXRlbXBsYXRlXScpO1xuY29uc3QgY2FyZHMgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcuY2FyZHMnKTtcblxuY29uc3QgbW9kYWxCdG4gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcjbXlCdG4nKTtcbmNvbnN0IGNsb3NlTW9kYWwgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcuY2xvc2UnKTtcbmNvbnN0IG1vZGFsSGVhZGVyID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLm1vZGFsLXRpdGxlJyk7XG5jb25zdCBzcGFuTWVzc2FnZSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5tZXNzYWdlJyk7XG5cbmNvbnN0IHZhbGlkYXRlRm9ybSA9ICgpID0+IHtcbiAgY29uc3QgeCA9IHRpdGxlLnZhbHVlO1xuICBjb25zdCB5ID0gZGVzY3JpcHRpb24udmFsdWU7XG4gIGNvbnN0IHogPSBkZGF0ZS52YWx1ZTtcbiAgaWYgKHggPT09ICcnKSB7XG4gICAgc3Bhbk1lc3NhZ2UuaW5uZXJIVE1MID0gJ1BsZWFzZSBmaWxsIHRoZSBUaXRsZSBmaWVsZCc7XG4gICAgc3Bhbk1lc3NhZ2UuY2xhc3NMaXN0LmFkZCgnYWxlcnQnLCAnYWxlcnQtZGFuZ2VyJyk7XG4gICAgcmV0dXJuIGZhbHNlO1xuICB9XG4gIGlmICh5ID09PSAnJykge1xuICAgIHNwYW5NZXNzYWdlLmlubmVySFRNTCA9ICdQbGVhc2UgZmlsbCB0aGUgZGVzY3JpcHRpb24gZmllbGQnO1xuICAgIHNwYW5NZXNzYWdlLmNsYXNzTGlzdC5hZGQoJ2FsZXJ0JywgJ2FsZXJ0LWRhbmdlcicpO1xuICAgIHJldHVybiBmYWxzZTtcbiAgfVxuICBpZiAoeiA9PT0gJycpIHtcbiAgICBzcGFuTWVzc2FnZS5pbm5lckhUTUwgPSAnUGxlYXNlIGZpbGwgdGhlIGR1ZSBkYXRlIGZpZWxkJztcbiAgICBzcGFuTWVzc2FnZS5jbGFzc0xpc3QuYWRkKCdhbGVydCcsICdhbGVydC1kYW5nZXInKTtcbiAgICByZXR1cm4gZmFsc2U7XG4gIH1cbiAgcmV0dXJuIHRydWU7XG59O1xuXG5sZXQgbW9kYWxPcGVuID0gZmFsc2U7XG5jb25zdCBtb2RhbENsb3NlU3RhdGUgPSAoKSA9PiB7XG4gIGNvbnN0IG1vZGFsSGVhZGVyID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLm1vZGFsLXRpdGxlJyk7XG5cbiAgaWYgKG1vZGFsT3Blbikge1xuICAgIG1vZGFsLnN0eWxlLnBvaW50ZXJFdmVudHMgPSAnbm9uZSc7XG4gICAgbW9kYWwuc3R5bGUudHJhbnNmb3JtID0gJ3NjYWxlKDApJztcbiAgICBtb2RhbE9wZW4gPSBmYWxzZTtcbiAgICBuZXdUYXNrRm9ybS5yZXNldCgpO1xuICB9IGVsc2Uge1xuICAgIG1vZGFsSGVhZGVyLnRleHRDb250ZW50ID0gJ1VwZGF0ZSBUb2RvJztcbiAgICBuZXdUYXNrRm9ybS52YWx1ZSA9ICdVcGRhdGUnO1xuICAgIHN1Ym1pdC5pbm5lckhUTUwgPSAndXBkYXRlJztcbiAgICBtb2RhbC5zdHlsZS5wb2ludGVyRXZlbnRzID0gJ2F1dG8nO1xuICAgIG1vZGFsLnN0eWxlLnRyYW5zZm9ybSA9ICdzY2FsZSgxKSc7XG4gICAgbW9kYWwuc3R5bGUuZGlzcGxheSA9ICdibG9jayc7XG4gICAgbW9kYWxPcGVuID0gdHJ1ZTtcbiAgICBuZXdUYXNrRm9ybS5yZXNldCgpO1xuICB9XG59O1xuXG5jb25zdCBlZGl0VG9kbyA9ICh0b2RvLCBpbmRleCkgPT4ge1xuICBtb2RhbENsb3NlU3RhdGUoKTtcbiAgdGl0bGUudmFsdWUgPSB0b2RvLnRpdGxlO1xuICBkZXNjcmlwdGlvbi52YWx1ZSA9IHRvZG8uZGVzY3JpcHRpb247XG4gIHByaW9yaXR5LnZhbHVlID0gdG9kby5wcmlvcml0eTtcbiAgZGRhdGUudmFsdWUgPSB0b2RvLmRkYXRlO1xuICB0b2RvaW5kZXgudmFsdWUgPSBpbmRleDtcbiAgc3VibWl0LmNsYXNzTGlzdC5hZGQoJ2VkaXQnKTtcbn07XG5cbmNvbnN0IGFkZENsYXNzID0gKCkgPT4ge1xuICBjb25zdCBlbGVtZW50cyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoJy5jYXJkLXByaW9yaXR5Jyk7XG5cbiAgZWxlbWVudHMuZm9yRWFjaCgoZWxlbWVudCkgPT4ge1xuICAgIGlmIChlbGVtZW50LnRleHRDb250ZW50ID09PSAnaGlnaCcpIHtcbiAgICAgIHJldHVybiBlbGVtZW50LmNsYXNzTGlzdC5hZGQoJ2J0bi1zdWNjZXNzJyk7XG4gICAgfVxuICAgIGlmIChlbGVtZW50LnRleHRDb250ZW50ID09PSAnbWVkaXVtJykge1xuICAgICAgcmV0dXJuIGVsZW1lbnQuY2xhc3NMaXN0LmFkZCgnYnRuLXdhcm5pbmcnKTtcbiAgICB9XG4gICAgcmV0dXJuIGVsZW1lbnQuY2xhc3NMaXN0LmFkZCgnYnRuLWRhbmdlcicpO1xuICB9KTtcbn07XG5cbmNvbnN0IGRlbGV0ZVRhc2sgPSAodG9kbywgY2FyZCkgPT4ge1xuICBjb25zdCBlZGl0aW5kZXggPSB0b2RvLnZhbHVlO1xuICBjb25zdCBzZWxlY3RlZFByb2plY3QxID0gbGlzdHMuZmluZCgobGlzdCkgPT4gbGlzdC5pZCA9PT0gb2JqZWN0LnNlbGVjdGVkSWQpO1xuICBzZWxlY3RlZFByb2plY3QxLnRhc2tzLnNwbGljZShlZGl0aW5kZXgsIDEpO1xuXG4gIGlmIChzdWJtaXQuY2xhc3NMaXN0LmNvbnRhaW5zKCdlZGl0JykpIHtcbiAgICBzdWJtaXQuY2xhc3NMaXN0LnJlbW92ZSgnZWRpdCcpO1xuICB9XG4gIHNhdmUoKTtcbiAgY2FyZHMucmVtb3ZlQ2hpbGQoY2FyZCk7XG59O1xuXG5jb25zdCByZW5kZXJQcm9qZWN0cyA9ICgpID0+IHtcbiAgY2xlYXJMaXN0KHByb2plY3RzKTtcblxuICBsaXN0cy5mb3JFYWNoKChsaXN0KSA9PiB7XG4gICAgY29uc3QgcHJvamVjdCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2xpJyk7XG4gICAgcHJvamVjdC5kYXRhc2V0Lmxpc3RJZCA9IGxpc3QuaWQ7XG4gICAgcHJvamVjdC5jbGFzc0xpc3QuYWRkKCdsaXN0LWdyb3VwLWl0ZW0nKTtcbiAgICBwcm9qZWN0LnNldEF0dHJpYnV0ZSgncm9sZScsICdidXR0b24nKTtcbiAgICBwcm9qZWN0LmlubmVyVGV4dCA9IGxpc3QubmFtZTtcbiAgICBpZiAobGlzdC5pZCA9PT0gb2JqZWN0LnNlbGVjdGVkSWQpIHtcbiAgICAgIHByb2plY3QuY2xhc3NMaXN0LmFkZCgnYWN0aXZlJyk7XG4gICAgfVxuICAgIHByb2plY3RzLmFwcGVuZENoaWxkKHByb2plY3QpO1xuICB9KTtcbn07XG5cbmNvbnN0IHJlbmRlclRhc2tzID0gKHNlbGVjdGVkSWQpID0+IHtcbiAgc2VsZWN0ZWRJZC50YXNrcy5mb3JFYWNoKCh0YXNrKSA9PiB7XG4gICAgY29uc3QgdG9kb0xpc3QgPSBkb2N1bWVudC5pbXBvcnROb2RlKHRvZG9UZW1wbGF0ZS5jb250ZW50LCB0cnVlKTtcbiAgICBjb25zdCBjYXJkID0gdG9kb0xpc3QucXVlcnlTZWxlY3RvcignLmNhcmQnKTtcbiAgICBjb25zdCB0b2RvVGl0bGUgPSB0b2RvTGlzdC5xdWVyeVNlbGVjdG9yKCcuY2FyZC10aXRsZScpO1xuICAgIHRvZG9UaXRsZS5pbm5lclRleHQgPSB0YXNrLnRpdGxlO1xuICAgIGNvbnN0IHRvZG9EZXNjcmlwdGlvbiA9IHRvZG9MaXN0LnF1ZXJ5U2VsZWN0b3IoJy5jYXJkLWRlc2NyaXB0aW9uJyk7XG4gICAgdG9kb0Rlc2NyaXB0aW9uLmlubmVyVGV4dCA9IHRhc2suZGVzY3JpcHRpb247XG4gICAgY29uc3QgdG9kb1ByaW9yaXR5ID0gdG9kb0xpc3QucXVlcnlTZWxlY3RvcignLmNhcmQtcHJpb3JpdHknKTtcbiAgICB0b2RvUHJpb3JpdHkuaW5uZXJUZXh0ID0gdGFzay5wcmlvcml0eTtcbiAgICB0b2RvUHJpb3JpdHkuY2xhc3NMaXN0LmFkZCgnYnRuJyk7XG4gICAgY29uc3QgdG9kb0RkYXRlID0gdG9kb0xpc3QucXVlcnlTZWxlY3RvcignLmNhcmQtZm9vdGVyJyk7XG4gICAgdG9kb0RkYXRlLmlubmVyVGV4dCA9IGBEdWUgb24gJHt0YXNrLmRkYXRlfWA7XG4gICAgY29uc3QgZWRpdEJ0biA9IHRvZG9MaXN0LnF1ZXJ5U2VsZWN0b3IoJy5lZGl0LWJ0bicpO1xuICAgIGNvbnN0IGluZGV4ID0gc2VsZWN0ZWRJZC50YXNrcy5pbmRleE9mKHRhc2spO1xuXG4gICAgZWRpdEJ0bi5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsICgpID0+IGVkaXRUb2RvKHRhc2ssIGluZGV4KSk7XG4gICAgY29uc3QgZGVsZXRlVGFza0J0biA9IHRvZG9MaXN0LnF1ZXJ5U2VsZWN0b3IoJy5kZWxldGUtYnRuJyk7XG4gICAgZGVsZXRlVGFza0J0bi5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsICgpID0+IHtcbiAgICAgIGNvbnN0IGRlbGV0ZUluZGV4ID0gc2VsZWN0ZWRJZC50YXNrcy5pbmRleE9mKHRhc2spO1xuICAgICAgdG9kb2luZGV4LnZhbHVlID0gZGVsZXRlSW5kZXg7XG4gICAgICBkZWxldGVUYXNrKHRvZG9pbmRleCwgY2FyZCk7XG4gICAgfSk7XG4gICAgY2FyZHMuYXBwZW5kQ2hpbGQodG9kb0xpc3QpO1xuICAgIGFkZENsYXNzKCk7XG4gIH0pO1xufTtcblxuZXhwb3J0IHtcbiAgdGl0bGUsXG4gIGRlc2NyaXB0aW9uLFxuICBkZGF0ZSxcbiAgcHJpb3JpdHksXG4gIHRvZG9pbmRleCxcbiAgc3VibWl0LFxuICBtb2RhbCxcbiAgbmV3VGFza0Zvcm0sXG4gIG5ld1Byb2plY3RJbnB1dCxcbiAgcHJvamVjdHMsXG4gIHRvZG9UZW1wbGF0ZSxcbiAgY2FyZHMsXG4gIG1vZGFsQnRuLFxuICBjbG9zZU1vZGFsLFxuICBtb2RhbEhlYWRlcixcbiAgbmV3UHJvamVjdEZvcm0sXG4gIHNwYW5NZXNzYWdlLFxuICByZW5kZXJUYXNrcyxcbiAgdmFsaWRhdGVGb3JtLFxuICByZW5kZXJQcm9qZWN0cyxcbn07XG4iLCJjbGFzcyBBZGRUYXNrIHtcbiAgY29uc3RydWN0b3IodGl0bGUsIGRlc2NyaXB0aW9uLCBkZGF0ZSwgcHJpb3JpdHkpIHtcbiAgICB0aGlzLnRpdGxlID0gdGl0bGU7XG4gICAgdGhpcy5kZXNjcmlwdGlvbiA9IGRlc2NyaXB0aW9uO1xuICAgIHRoaXMuZGRhdGUgPSBkZGF0ZTtcbiAgICB0aGlzLnByaW9yaXR5ID0gcHJpb3JpdHk7XG4gICAgdGhpcy5pZCA9IERhdGUubm93KCkudG9TdHJpbmcoKTtcbiAgfVxufVxuXG5leHBvcnQgZGVmYXVsdCBBZGRUYXNrO1xuIiwiZnVuY3Rpb24gY3JlYXRlUHJvamVjdChuYW1lKSB7XG4gIHJldHVybiB7XG4gICAgaWQ6IERhdGUubm93KCkudG9TdHJpbmcoKSxcbiAgICBuYW1lLFxuICAgIHRhc2tzOiBbXSxcbiAgfTtcbn1cblxuZXhwb3J0IGRlZmF1bHQgY3JlYXRlUHJvamVjdDtcbiIsImltcG9ydCBhcGkgZnJvbSBcIiEuLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbmplY3RTdHlsZXNJbnRvU3R5bGVUYWcuanNcIjtcbiAgICAgICAgICAgIGltcG9ydCBjb250ZW50IGZyb20gXCIhIS4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4vc3R5bGUuY3NzXCI7XG5cbnZhciBvcHRpb25zID0ge307XG5cbm9wdGlvbnMuaW5zZXJ0ID0gXCJoZWFkXCI7XG5vcHRpb25zLnNpbmdsZXRvbiA9IGZhbHNlO1xuXG52YXIgdXBkYXRlID0gYXBpKGNvbnRlbnQsIG9wdGlvbnMpO1xuXG5cblxuZXhwb3J0IGRlZmF1bHQgY29udGVudC5sb2NhbHMgfHwge307IiwiaW1wb3J0IHtcbiAgdGl0bGUsXG4gIGRlc2NyaXB0aW9uLFxuICBkZGF0ZSxcbiAgcHJpb3JpdHksXG4gIHRvZG9pbmRleCxcbiAgc3VibWl0LFxuICBtb2RhbCxcbiAgbmV3VGFza0Zvcm0sXG4gIG5ld1Byb2plY3RJbnB1dCxcbiAgcHJvamVjdHMsXG4gIG5ld1Byb2plY3RGb3JtLFxuICBjYXJkcyxcbiAgbW9kYWxCdG4sXG4gIGNsb3NlTW9kYWwsXG4gIG1vZGFsSGVhZGVyLFxuICByZW5kZXJUYXNrcyxcbiAgdmFsaWRhdGVGb3JtLFxuICByZW5kZXJQcm9qZWN0cyxcbiAgc3Bhbk1lc3NhZ2UsXG59IGZyb20gJy4vZG9tJztcblxuaW1wb3J0IHtcbiAgbGlzdHMsIHNhdmUsIG9iamVjdCwgY2xlYXJMaXN0LFxufSBmcm9tICcuL2xvY2FsU3RvcmFnZSc7XG5pbXBvcnQgQWRkVGFzayBmcm9tICcuL2FkZHRvZG8nO1xuaW1wb3J0IGNyZWF0ZVByb2plY3QgZnJvbSAnLi9hZGRwcm9qZWN0JztcbmltcG9ydCAnLi9zdHlsZS5jc3MnO1xuXG5jb25zdCByZW5kZXIgPSAoKSA9PiB7XG4gIHJlbmRlclByb2plY3RzKCk7XG4gIGNvbnN0IHNlbGVjdGVkUHJvamVjdCA9IGxpc3RzLmZpbmQoKGxpc3QpID0+IGxpc3QuaWQgPT09IG9iamVjdC5zZWxlY3RlZElkKTtcbiAgaWYgKHNlbGVjdGVkUHJvamVjdCA9PSBudWxsKSB7XG4gICAgY2FyZHMuc3R5bGUuZGlzcGxheSA9ICdub25lJztcbiAgfSBlbHNlIHtcbiAgICBjYXJkcy5zdHlsZS5zdHlsZSA9ICcnO1xuICAgIGNsZWFyTGlzdChjYXJkcyk7XG4gICAgcmVuZGVyVGFza3Moc2VsZWN0ZWRQcm9qZWN0KTtcbiAgfVxufTtcblxucmVuZGVyKCk7XG5jb25zdCBzYXZlQW5kUmVuZGVyID0gKCkgPT4ge1xuICByZW5kZXIoKTtcbiAgc2F2ZSgpO1xufTtcbmNvbnN0IGRlZmF1bHRQcm9qZWN0ID0gKCkgPT4ge1xuICBpZiAobGlzdHMubGVuZ3RoID09PSAwKSB7XG4gICAgY29uc3QgcHJvamVjdCA9IGNyZWF0ZVByb2plY3QoJ0RlZmF1bHQnKTtcbiAgICBvYmplY3Quc2VsZWN0ZWRJZCA9IHByb2plY3QuaWQ7XG4gICAgbGlzdHMucHVzaChwcm9qZWN0KTtcbiAgICBzYXZlQW5kUmVuZGVyKCk7XG4gIH1cbn07XG5cbmRlZmF1bHRQcm9qZWN0KCk7XG5cbm5ld1Byb2plY3RGb3JtLmFkZEV2ZW50TGlzdGVuZXIoJ3N1Ym1pdCcsIChlKSA9PiB7XG4gIGUucHJldmVudERlZmF1bHQoKTtcbiAgY29uc3QgbmV3UHJvamVjdE5hbWUgPSBuZXdQcm9qZWN0SW5wdXQudmFsdWU7XG4gIGlmIChuZXdQcm9qZWN0TmFtZSA9PSBudWxsIHx8IG5ld1Byb2plY3ROYW1lID09PSAnJykgcmV0dXJuO1xuICBjb25zdCBwcm9qZWN0ID0gY3JlYXRlUHJvamVjdChuZXdQcm9qZWN0TmFtZSk7XG4gIG5ld1Byb2plY3RJbnB1dC52YWx1ZSA9IG51bGw7XG4gIGxpc3RzLnB1c2gocHJvamVjdCk7XG4gIHNhdmVBbmRSZW5kZXIoKTtcbn0pO1xuXG5wcm9qZWN0cy5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIChlKSA9PiB7XG4gIGUucHJldmVudERlZmF1bHQoKTtcbiAgaWYgKGUudGFyZ2V0LnRhZ05hbWUudG9Mb3dlckNhc2UoKSA9PT0gJ2xpJykge1xuICAgIG9iamVjdC5zZWxlY3RlZElkID0gZS50YXJnZXQuZGF0YXNldC5saXN0SWQ7XG4gICAgc2F2ZUFuZFJlbmRlcigpO1xuICB9XG59KTtcblxuc3VibWl0LmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgKGUpID0+IHtcbiAgZS5wcmV2ZW50RGVmYXVsdCgpO1xuICBpZiAoc3VibWl0LmNsYXNzTGlzdC5jb250YWlucygnZWRpdCcpKSB7XG4gICAgY29uc3QgZWRpdGluZGV4ID0gdG9kb2luZGV4LnZhbHVlO1xuICAgIGNvbnN0IHNlbGVjdGVkUHJvamVjdDEgPSBsaXN0cy5maW5kKFxuICAgICAgKGxpc3QpID0+IGxpc3QuaWQgPT09IG9iamVjdC5zZWxlY3RlZElkLFxuICAgICk7XG4gICAgY29uc3QgdG9kbyA9IHNlbGVjdGVkUHJvamVjdDEudGFza3NbZWRpdGluZGV4XTtcbiAgICB0b2RvLnRpdGxlID0gdGl0bGUudmFsdWU7XG4gICAgdG9kby5kZXNjcmlwdGlvbiA9IGRlc2NyaXB0aW9uLnZhbHVlO1xuICAgIHRvZG8ucHJpb3JpdHkgPSBwcmlvcml0eS52YWx1ZTtcbiAgICB0b2RvLmRkYXRlID0gZGRhdGUudmFsdWU7XG5cbiAgICBzZWxlY3RlZFByb2plY3QxLnRhc2tzW2VkaXRpbmRleF0gPSB0b2RvO1xuXG4gICAgc3VibWl0LmNsYXNzTGlzdC5yZW1vdmUoJ2VkaXQnKTtcblxuICAgIG5ld1Rhc2tGb3JtLnJlc2V0KCk7XG4gICAgbW9kYWwuc3R5bGUuZGlzcGxheSA9ICdub25lJztcbiAgfSBlbHNlIGlmICh2YWxpZGF0ZUZvcm0oKSkge1xuICAgIGNvbnN0IHRpdGxlMSA9IHRpdGxlLnZhbHVlO1xuICAgIGNvbnN0IGRlc2NyaXB0aW9uMSA9IGRlc2NyaXB0aW9uLnZhbHVlO1xuICAgIGNvbnN0IGRkYXRlMSA9IGRkYXRlLnZhbHVlO1xuICAgIGNvbnN0IHByaW9yaXR5MSA9IHByaW9yaXR5LnZhbHVlO1xuICAgIGNvbnN0IG5ld3RvZG8gPSBuZXcgQWRkVGFzayh0aXRsZTEsIGRlc2NyaXB0aW9uMSwgZGRhdGUxLCBwcmlvcml0eTEpO1xuICAgIGNvbnN0IHNlbGVjdGVkUHJvamVjdCA9IGxpc3RzLmZpbmQoKGxpc3QpID0+IGxpc3QuaWQgPT09IG9iamVjdC5zZWxlY3RlZElkKTtcblxuICAgIHNlbGVjdGVkUHJvamVjdC50YXNrcy5wdXNoKG5ld3RvZG8pO1xuICAgIHNwYW5NZXNzYWdlLmlubmVySFRNTCA9ICcnO1xuICAgIHNwYW5NZXNzYWdlLmNsYXNzTGlzdC5yZW1vdmUoJ2FsZXJ0JywgJ2FsZXJ0LWRhbmdlcicpO1xuICAgIG5ld1Rhc2tGb3JtLnJlc2V0KCk7XG4gICAgbW9kYWwuc3R5bGUuZGlzcGxheSA9ICdub25lJztcbiAgfVxuICBzYXZlQW5kUmVuZGVyKCk7XG59KTtcblxubW9kYWxCdG4uYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCAoKSA9PiB7XG4gIG1vZGFsLnN0eWxlLmRpc3BsYXkgPSAnYmxvY2snO1xuICBtb2RhbEhlYWRlci50ZXh0Q29udGVudCA9ICdOZXcgVG9kbyc7XG4gIHN1Ym1pdC5pbm5lckhUTUwgPSAnQWRkJztcbiAgbmV3VGFza0Zvcm0ucmVzZXQoKTtcbn0pO1xuXG5jbG9zZU1vZGFsLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgKCkgPT4ge1xuICBtb2RhbC5zdHlsZS5kaXNwbGF5ID0gJ25vbmUnO1xuICBuZXdUYXNrRm9ybS5yZXNldCgpO1xufSk7XG5cbndpbmRvdy5vbmNsaWNrID0gZnVuY3Rpb24gbW9kYWx3cml0ZShlKSB7XG4gIGlmIChlLnRhcmdldCA9PT0gbW9kYWwpIHtcbiAgICBtb2RhbC5zdHlsZS5kaXNwbGF5ID0gJ25vbmUnO1xuICAgIG5ld1Rhc2tGb3JtLnJlc2V0KCk7XG4gIH1cbn07XG4iXSwic291cmNlUm9vdCI6IiJ9